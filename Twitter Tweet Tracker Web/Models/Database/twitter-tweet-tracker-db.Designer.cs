//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Twitter_Tweet_Tracker_Web.Models.Database {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_twitter_tweet_tracker_db")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _twitter_tweet_tracker_db : global::System.Data.DataSet {
        
        private emoji_scoresDataTable tableemoji_scores;
        
        private word_scoresDataTable tableword_scores;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public _twitter_tweet_tracker_db() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected _twitter_tweet_tracker_db(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["emoji_scores"] != null)) {
                    base.Tables.Add(new emoji_scoresDataTable(ds.Tables["emoji_scores"]));
                }
                if ((ds.Tables["word_scores"] != null)) {
                    base.Tables.Add(new word_scoresDataTable(ds.Tables["word_scores"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public emoji_scoresDataTable emoji_scores {
            get {
                return this.tableemoji_scores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public word_scoresDataTable word_scores {
            get {
                return this.tableword_scores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            _twitter_tweet_tracker_db cln = ((_twitter_tweet_tracker_db)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["emoji_scores"] != null)) {
                    base.Tables.Add(new emoji_scoresDataTable(ds.Tables["emoji_scores"]));
                }
                if ((ds.Tables["word_scores"] != null)) {
                    base.Tables.Add(new word_scoresDataTable(ds.Tables["word_scores"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableemoji_scores = ((emoji_scoresDataTable)(base.Tables["emoji_scores"]));
            if ((initTable == true)) {
                if ((this.tableemoji_scores != null)) {
                    this.tableemoji_scores.InitVars();
                }
            }
            this.tableword_scores = ((word_scoresDataTable)(base.Tables["word_scores"]));
            if ((initTable == true)) {
                if ((this.tableword_scores != null)) {
                    this.tableword_scores.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "twitter-tweet-tracker-db";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/twitter-tweet-tracker-db.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableemoji_scores = new emoji_scoresDataTable();
            base.Tables.Add(this.tableemoji_scores);
            this.tableword_scores = new word_scoresDataTable();
            base.Tables.Add(this.tableword_scores);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeemoji_scores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeword_scores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _twitter_tweet_tracker_db ds = new _twitter_tweet_tracker_db();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void emoji_scoresRowChangeEventHandler(object sender, emoji_scoresRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void word_scoresRowChangeEventHandler(object sender, word_scoresRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class emoji_scoresDataTable : global::System.Data.TypedTableBase<emoji_scoresRow> {
            
            private global::System.Data.DataColumn columnunicode;
            
            private global::System.Data.DataColumn columnemoji;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnanger;
            
            private global::System.Data.DataColumn columnanticipation;
            
            private global::System.Data.DataColumn columndisgust;
            
            private global::System.Data.DataColumn columnfear;
            
            private global::System.Data.DataColumn columnjoy;
            
            private global::System.Data.DataColumn columnsadness;
            
            private global::System.Data.DataColumn columnsurprise;
            
            private global::System.Data.DataColumn columntrust;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresDataTable() {
                this.TableName = "emoji_scores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal emoji_scoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected emoji_scoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn unicodeColumn {
                get {
                    return this.columnunicode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn emojiColumn {
                get {
                    return this.columnemoji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn angerColumn {
                get {
                    return this.columnanger;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn anticipationColumn {
                get {
                    return this.columnanticipation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn disgustColumn {
                get {
                    return this.columndisgust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fearColumn {
                get {
                    return this.columnfear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn joyColumn {
                get {
                    return this.columnjoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sadnessColumn {
                get {
                    return this.columnsadness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn surpriseColumn {
                get {
                    return this.columnsurprise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn trustColumn {
                get {
                    return this.columntrust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresRow this[int index] {
                get {
                    return ((emoji_scoresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event emoji_scoresRowChangeEventHandler emoji_scoresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event emoji_scoresRowChangeEventHandler emoji_scoresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event emoji_scoresRowChangeEventHandler emoji_scoresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event emoji_scoresRowChangeEventHandler emoji_scoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addemoji_scoresRow(emoji_scoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresRow Addemoji_scoresRow(string unicode, string emoji, string name, double anger, double anticipation, double disgust, double fear, double joy, double sadness, double surprise, double trust) {
                emoji_scoresRow rowemoji_scoresRow = ((emoji_scoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        unicode,
                        emoji,
                        name,
                        anger,
                        anticipation,
                        disgust,
                        fear,
                        joy,
                        sadness,
                        surprise,
                        trust};
                rowemoji_scoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemoji_scoresRow);
                return rowemoji_scoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                emoji_scoresDataTable cln = ((emoji_scoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new emoji_scoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnunicode = base.Columns["unicode"];
                this.columnemoji = base.Columns["emoji"];
                this.columnname = base.Columns["name"];
                this.columnanger = base.Columns["anger"];
                this.columnanticipation = base.Columns["anticipation"];
                this.columndisgust = base.Columns["disgust"];
                this.columnfear = base.Columns["fear"];
                this.columnjoy = base.Columns["joy"];
                this.columnsadness = base.Columns["sadness"];
                this.columnsurprise = base.Columns["surprise"];
                this.columntrust = base.Columns["trust"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnunicode = new global::System.Data.DataColumn("unicode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunicode);
                this.columnemoji = new global::System.Data.DataColumn("emoji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemoji);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnanger = new global::System.Data.DataColumn("anger", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanger);
                this.columnanticipation = new global::System.Data.DataColumn("anticipation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanticipation);
                this.columndisgust = new global::System.Data.DataColumn("disgust", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisgust);
                this.columnfear = new global::System.Data.DataColumn("fear", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfear);
                this.columnjoy = new global::System.Data.DataColumn("joy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjoy);
                this.columnsadness = new global::System.Data.DataColumn("sadness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsadness);
                this.columnsurprise = new global::System.Data.DataColumn("surprise", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurprise);
                this.columntrust = new global::System.Data.DataColumn("trust", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrust);
                this.columnunicode.AllowDBNull = false;
                this.columnunicode.MaxLength = 255;
                this.columnemoji.AllowDBNull = false;
                this.columnemoji.MaxLength = 255;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnanger.AllowDBNull = false;
                this.columnanticipation.AllowDBNull = false;
                this.columndisgust.AllowDBNull = false;
                this.columnfear.AllowDBNull = false;
                this.columnjoy.AllowDBNull = false;
                this.columnsadness.AllowDBNull = false;
                this.columnsurprise.AllowDBNull = false;
                this.columntrust.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresRow Newemoji_scoresRow() {
                return ((emoji_scoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new emoji_scoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(emoji_scoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.emoji_scoresRowChanged != null)) {
                    this.emoji_scoresRowChanged(this, new emoji_scoresRowChangeEvent(((emoji_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.emoji_scoresRowChanging != null)) {
                    this.emoji_scoresRowChanging(this, new emoji_scoresRowChangeEvent(((emoji_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.emoji_scoresRowDeleted != null)) {
                    this.emoji_scoresRowDeleted(this, new emoji_scoresRowChangeEvent(((emoji_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.emoji_scoresRowDeleting != null)) {
                    this.emoji_scoresRowDeleting(this, new emoji_scoresRowChangeEvent(((emoji_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removeemoji_scoresRow(emoji_scoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _twitter_tweet_tracker_db ds = new _twitter_tweet_tracker_db();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "emoji_scoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class word_scoresDataTable : global::System.Data.TypedTableBase<word_scoresRow> {
            
            private global::System.Data.DataColumn columnword;
            
            private global::System.Data.DataColumn columnjoy;
            
            private global::System.Data.DataColumn columnsurprise;
            
            private global::System.Data.DataColumn columntrust;
            
            private global::System.Data.DataColumn columnanticipation;
            
            private global::System.Data.DataColumn columnfear;
            
            private global::System.Data.DataColumn columnanger;
            
            private global::System.Data.DataColumn columnsadness;
            
            private global::System.Data.DataColumn columndisgust;
            
            private global::System.Data.DataColumn columnhappiness;
            
            private global::System.Data.DataColumn columnlevity;
            
            private global::System.Data.DataColumn columnhate;
            
            private global::System.Data.DataColumn columnloyalty;
            
            private global::System.Data.DataColumn columnmelancholy;
            
            private global::System.Data.DataColumn columnanxiety;
            
            private global::System.Data.DataColumn columnembarrassment;
            
            private global::System.Data.DataColumn columnregard;
            
            private global::System.Data.DataColumn columnstress;
            
            private global::System.Data.DataColumn columngusto;
            
            private global::System.Data.DataColumn columncompunction;
            
            private global::System.Data.DataColumn columncynicism;
            
            private global::System.Data.DataColumn columnsituation;
            
            private global::System.Data.DataColumn columnumbrage;
            
            private global::System.Data.DataColumn columnfavor;
            
            private global::System.Data.DataColumn columnmeekness;
            
            private global::System.Data.DataColumn columncompassion;
            
            private global::System.Data.DataColumn columnwithdrawal;
            
            private global::System.Data.DataColumn columnscare;
            
            private global::System.Data.DataColumn columnunrest;
            
            private global::System.Data.DataColumn columncalm;
            
            private global::System.Data.DataColumn columncourage;
            
            private global::System.Data.DataColumn columndespair;
            
            private global::System.Data.DataColumn columnfidget;
            
            private global::System.Data.DataColumn columnshyness;
            
            private global::System.Data.DataColumn columnapathy;
            
            private global::System.Data.DataColumn columnhysteria;
            
            private global::System.Data.DataColumn columnshadow;
            
            private global::System.Data.DataColumn columnresentment;
            
            private global::System.Data.DataColumn columnoptimism;
            
            private global::System.Data.DataColumn columnheartstrings;
            
            private global::System.Data.DataColumn columnbonheur;
            
            private global::System.Data.DataColumn columndudgeon;
            
            private global::System.Data.DataColumn columnmerriment;
            
            private global::System.Data.DataColumn columnhope;
            
            private global::System.Data.DataColumn columnforeboding;
            
            private global::System.Data.DataColumn columnenvy;
            
            private global::System.Data.DataColumn columninterest;
            
            private global::System.Data.DataColumn columnrelaxed;
            
            private global::System.Data.DataColumn columncruelty;
            
            private global::System.Data.DataColumn columnhelplessness;
            
            private global::System.Data.DataColumn columnsolicitude;
            
            private global::System.Data.DataColumn columnsatisfaction;
            
            private global::System.Data.DataColumn columnsuspense;
            
            private global::System.Data.DataColumn columnfondness;
            
            private global::System.Data.DataColumn columndolor;
            
            private global::System.Data.DataColumn columnweakness;
            
            private global::System.Data.DataColumn columnelectricity;
            
            private global::System.Data.DataColumn columnesteem;
            
            private global::System.Data.DataColumn columnwoe;
            
            private global::System.Data.DataColumn columnrelieved;
            
            private global::System.Data.DataColumn columnwonder;
            
            private global::System.Data.DataColumn columnattachment;
            
            private global::System.Data.DataColumn columnpessimism;
            
            private global::System.Data.DataColumn columnmalice;
            
            private global::System.Data.DataColumn columnlove;
            
            private global::System.Data.DataColumn columncompatibility;
            
            private global::System.Data.DataColumn columntimidity;
            
            private global::System.Data.DataColumn columnblessedness;
            
            private global::System.Data.DataColumn columnexultation;
            
            private global::System.Data.DataColumn columntumult;
            
            private global::System.Data.DataColumn columnalienation;
            
            private global::System.Data.DataColumn columnhumility;
            
            private global::System.Data.DataColumn columnpowerlessness;
            
            private global::System.Data.DataColumn columncomplacency;
            
            private global::System.Data.DataColumn columngloom;
            
            private global::System.Data.DataColumn columnaggression;
            
            private global::System.Data.DataColumn columnsensation;
            
            private global::System.Data.DataColumn columnantipathy;
            
            private global::System.Data.DataColumn columngloat;
            
            private global::System.Data.DataColumn columndoubt;
            
            private global::System.Data.DataColumn columnempathy;
            
            private global::System.Data.DataColumn columnconsciousness;
            
            private global::System.Data.DataColumn columningratitude;
            
            private global::System.Data.DataColumn columnhopelessness;
            
            private global::System.Data.DataColumn columnsignal;
            
            private global::System.Data.DataColumn columnalarm;
            
            private global::System.Data.DataColumn columndislike;
            
            private global::System.Data.DataColumn columnstir;
            
            private global::System.Data.DataColumn columndistance;
            
            private global::System.Data.DataColumn columnsmugness;
            
            private global::System.Data.DataColumn columnrepentance;
            
            private global::System.Data.DataColumn columneasiness;
            
            private global::System.Data.DataColumn columnfriendliness;
            
            private global::System.Data.DataColumn columngravity;
            
            private global::System.Data.DataColumn columndispleasure;
            
            private global::System.Data.DataColumn columndiscouragement;
            
            private global::System.Data.DataColumn columnpique;
            
            private global::System.Data.DataColumn columnbenevolence;
            
            private global::System.Data.DataColumn columnchagrin;
            
            private global::System.Data.DataColumn columntension;
            
            private global::System.Data.DataColumn columntogetherness;
            
            private global::System.Data.DataColumn columnpanic;
            
            private global::System.Data.DataColumn columneagerness;
            
            private global::System.Data.DataColumn columnpleasure;
            
            private global::System.Data.DataColumn columnexcitement;
            
            private global::System.Data.DataColumn columnmood;
            
            private global::System.Data.DataColumn columnanimosity;
            
            private global::System.Data.DataColumn columndefeatism;
            
            private global::System.Data.DataColumn columnworship;
            
            private global::System.Data.DataColumn columnrepugnance;
            
            private global::System.Data.DataColumn columngrudge;
            
            private global::System.Data.DataColumn columneuphoria;
            
            private global::System.Data.DataColumn columnantagonism;
            
            private global::System.Data.DataColumn columntrait;
            
            private global::System.Data.DataColumn columnbrotherhood;
            
            private global::System.Data.DataColumn columnstewing;
            
            private global::System.Data.DataColumn columnpity;
            
            private global::System.Data.DataColumn columndaze;
            
            private global::System.Data.DataColumn columnsympathy;
            
            private global::System.Data.DataColumn columnannoyance;
            
            private global::System.Data.DataColumn columnencouragement;
            
            private global::System.Data.DataColumn columnbuoyancy;
            
            private global::System.Data.DataColumn columndevotion;
            
            private global::System.Data.DataColumn columntriumph;
            
            private global::System.Data.DataColumn columncontempt;
            
            private global::System.Data.DataColumn columnbelonging;
            
            private global::System.Data.DataColumn columnsinking;
            
            private global::System.Data.DataColumn columnunhappiness;
            
            private global::System.Data.DataColumn columntrepidation;
            
            private global::System.Data.DataColumn columnadmiration;
            
            private global::System.Data.DataColumn columndisapproval;
            
            private global::System.Data.DataColumn columnindifference;
            
            private global::System.Data.DataColumn columnaffection;
            
            private global::System.Data.DataColumn columnastonishment;
            
            private global::System.Data.DataColumn columnoppression;
            
            private global::System.Data.DataColumn columnlanguor;
            
            private global::System.Data.DataColumn columncoolness;
            
            private global::System.Data.DataColumn columnliking;
            
            private global::System.Data.DataColumn columnbehaviour;
            
            private global::System.Data.DataColumn columnpeace;
            
            private global::System.Data.DataColumn columnmisogyny;
            
            private global::System.Data.DataColumn columnbang;
            
            private global::System.Data.DataColumn columncheerfulness;
            
            private global::System.Data.DataColumn columncreeps;
            
            private global::System.Data.DataColumn columnagitation;
            
            private global::System.Data.DataColumn columnboredom;
            
            private global::System.Data.DataColumn columngratification;
            
            private global::System.Data.DataColumn columnhurt;
            
            private global::System.Data.DataColumn columnagape;
            
            private global::System.Data.DataColumn columnconcern;
            
            private global::System.Data.DataColumn columnardor;
            
            private global::System.Data.DataColumn columnmourning;
            
            private global::System.Data.DataColumn columnharassment;
            
            private global::System.Data.DataColumn columncontentment;
            
            private global::System.Data.DataColumn columncloseness;
            
            private global::System.Data.DataColumn columnsurprised;
            
            private global::System.Data.DataColumn columnconfusion;
            
            private global::System.Data.DataColumn columnpresage;
            
            private global::System.Data.DataColumn columnapproval;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnwrath;
            
            private global::System.Data.DataColumn columndander;
            
            private global::System.Data.DataColumn columnreverence;
            
            private global::System.Data.DataColumn columncontent;
            
            private global::System.Data.DataColumn columnamusement;
            
            private global::System.Data.DataColumn columnindignation;
            
            private global::System.Data.DataColumn columnfearlessness;
            
            private global::System.Data.DataColumn columndepreciation;
            
            private global::System.Data.DataColumn columnexpectation;
            
            private global::System.Data.DataColumn columntenderness;
            
            private global::System.Data.DataColumn columnmisery;
            
            private global::System.Data.DataColumn columndepression;
            
            private global::System.Data.DataColumn columnforgiveness;
            
            private global::System.Data.DataColumn columnwillies;
            
            private global::System.Data.DataColumn columnfit;
            
            private global::System.Data.DataColumn columncomfort;
            
            private global::System.Data.DataColumn columnshame;
            
            private global::System.Data.DataColumn columnapprehension;
            
            private global::System.Data.DataColumn columndelight;
            
            private global::System.Data.DataColumn columnjealousy;
            
            private global::System.Data.DataColumn columnaggravation;
            
            private global::System.Data.DataColumn columnchill;
            
            private global::System.Data.DataColumn columnwarpath;
            
            private global::System.Data.DataColumn columnserene;
            
            private global::System.Data.DataColumn columnexuberance;
            
            private global::System.Data.DataColumn columnresignation;
            
            private global::System.Data.DataColumn columngratitude;
            
            private global::System.Data.DataColumn columndespondency;
            
            private global::System.Data.DataColumn columnnirvana;
            
            private global::System.Data.DataColumn columnlividity;
            
            private global::System.Data.DataColumn columnemotion;
            
            private global::System.Data.DataColumn columndisappointment;
            
            private global::System.Data.DataColumn columnhorror;
            
            private global::System.Data.DataColumn columngrief;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columndistress;
            
            private global::System.Data.DataColumn columnintoxication;
            
            private global::System.Data.DataColumn columnirritation;
            
            private global::System.Data.DataColumn columninsecurity;
            
            private global::System.Data.DataColumn columnpride;
            
            private global::System.Data.DataColumn columnfever;
            
            private global::System.Data.DataColumn columnrejoicing;
            
            private global::System.Data.DataColumn columnimpatience;
            
            private global::System.Data.DataColumn columnpoliteness;
            
            private global::System.Data.DataColumn columntranquillity;
            
            private global::System.Data.DataColumn columnhilarity;
            
            private global::System.Data.DataColumn columnfury;
            
            private global::System.Data.DataColumn columngladness;
            
            private global::System.Data.DataColumn columnthing;
            
            private global::System.Data.DataColumn columnnausea;
            
            private global::System.Data.DataColumn columncalmness;
            
            private global::System.Data.DataColumn columnfulfillment;
            
            private global::System.Data.DataColumn columnecstasy;
            
            private global::System.Data.DataColumn columnelation;
            
            private global::System.Data.DataColumn columnplayfulness;
            
            private global::System.Data.DataColumn columnexhilaration;
            
            private global::System.Data.DataColumn columntitillation;
            
            private global::System.Data.DataColumn columngratefulness;
            
            private global::System.Data.DataColumn columndiffidence;
            
            private global::System.Data.DataColumn columnradiance;
            
            private global::System.Data.DataColumn columnsorrow;
            
            private global::System.Data.DataColumn columnconfidence;
            
            private global::System.Data.DataColumn columnsecurity;
            
            private global::System.Data.DataColumn columnego;
            
            private global::System.Data.DataColumn columnhostility;
            
            private global::System.Data.DataColumn columnfrustration;
            
            private global::System.Data.DataColumn columnattrition;
            
            private global::System.Data.DataColumn columnangst;
            
            private global::System.Data.DataColumn columnshock;
            
            private global::System.Data.DataColumn columnpreference;
            
            private global::System.Data.DataColumn columnenthusiasm;
            
            private global::System.Data.DataColumn columnisolation;
            
            private global::System.Data.DataColumn columnconscience;
            
            private global::System.Data.DataColumn columnscruple;
            
            private global::System.Data.DataColumn columnworry;
            
            private global::System.Data.DataColumn columnearnestness;
            
            private global::System.Data.DataColumn columnmalevolence;
            
            private global::System.Data.DataColumn columnawe;
            
            private global::System.Data.DataColumn columnguilt;
            
            private global::System.Data.DataColumn columnidentification;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresDataTable() {
                this.TableName = "word_scores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal word_scoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected word_scoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wordColumn {
                get {
                    return this.columnword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn joyColumn {
                get {
                    return this.columnjoy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn surpriseColumn {
                get {
                    return this.columnsurprise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn trustColumn {
                get {
                    return this.columntrust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn anticipationColumn {
                get {
                    return this.columnanticipation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fearColumn {
                get {
                    return this.columnfear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn angerColumn {
                get {
                    return this.columnanger;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sadnessColumn {
                get {
                    return this.columnsadness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn disgustColumn {
                get {
                    return this.columndisgust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn happinessColumn {
                get {
                    return this.columnhappiness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn levityColumn {
                get {
                    return this.columnlevity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hateColumn {
                get {
                    return this.columnhate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loyaltyColumn {
                get {
                    return this.columnloyalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn melancholyColumn {
                get {
                    return this.columnmelancholy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn anxietyColumn {
                get {
                    return this.columnanxiety;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn embarrassmentColumn {
                get {
                    return this.columnembarrassment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn regardColumn {
                get {
                    return this.columnregard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stressColumn {
                get {
                    return this.columnstress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gustoColumn {
                get {
                    return this.columngusto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn compunctionColumn {
                get {
                    return this.columncompunction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cynicismColumn {
                get {
                    return this.columncynicism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn situationColumn {
                get {
                    return this.columnsituation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn umbrageColumn {
                get {
                    return this.columnumbrage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn favorColumn {
                get {
                    return this.columnfavor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn meeknessColumn {
                get {
                    return this.columnmeekness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn compassionColumn {
                get {
                    return this.columncompassion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn withdrawalColumn {
                get {
                    return this.columnwithdrawal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn scareColumn {
                get {
                    return this.columnscare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn unrestColumn {
                get {
                    return this.columnunrest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn calmColumn {
                get {
                    return this.columncalm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn courageColumn {
                get {
                    return this.columncourage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn despairColumn {
                get {
                    return this.columndespair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fidgetColumn {
                get {
                    return this.columnfidget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn shynessColumn {
                get {
                    return this.columnshyness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn apathyColumn {
                get {
                    return this.columnapathy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hysteriaColumn {
                get {
                    return this.columnhysteria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn shadowColumn {
                get {
                    return this.columnshadow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn resentmentColumn {
                get {
                    return this.columnresentment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn optimismColumn {
                get {
                    return this.columnoptimism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn heartstringsColumn {
                get {
                    return this.columnheartstrings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bonheurColumn {
                get {
                    return this.columnbonheur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dudgeonColumn {
                get {
                    return this.columndudgeon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn merrimentColumn {
                get {
                    return this.columnmerriment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hopeColumn {
                get {
                    return this.columnhope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn forebodingColumn {
                get {
                    return this.columnforeboding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn envyColumn {
                get {
                    return this.columnenvy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn interestColumn {
                get {
                    return this.columninterest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn relaxedColumn {
                get {
                    return this.columnrelaxed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn crueltyColumn {
                get {
                    return this.columncruelty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn helplessnessColumn {
                get {
                    return this.columnhelplessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn solicitudeColumn {
                get {
                    return this.columnsolicitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn satisfactionColumn {
                get {
                    return this.columnsatisfaction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn suspenseColumn {
                get {
                    return this.columnsuspense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fondnessColumn {
                get {
                    return this.columnfondness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dolorColumn {
                get {
                    return this.columndolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn weaknessColumn {
                get {
                    return this.columnweakness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn electricityColumn {
                get {
                    return this.columnelectricity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn esteemColumn {
                get {
                    return this.columnesteem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn woeColumn {
                get {
                    return this.columnwoe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn relievedColumn {
                get {
                    return this.columnrelieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wonderColumn {
                get {
                    return this.columnwonder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn attachmentColumn {
                get {
                    return this.columnattachment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pessimismColumn {
                get {
                    return this.columnpessimism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn maliceColumn {
                get {
                    return this.columnmalice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loveColumn {
                get {
                    return this.columnlove;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn compatibilityColumn {
                get {
                    return this.columncompatibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn timidityColumn {
                get {
                    return this.columntimidity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn blessednessColumn {
                get {
                    return this.columnblessedness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exultationColumn {
                get {
                    return this.columnexultation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tumultColumn {
                get {
                    return this.columntumult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn alienationColumn {
                get {
                    return this.columnalienation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn humilityColumn {
                get {
                    return this.columnhumility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn powerlessnessColumn {
                get {
                    return this.columnpowerlessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn complacencyColumn {
                get {
                    return this.columncomplacency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gloomColumn {
                get {
                    return this.columngloom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aggressionColumn {
                get {
                    return this.columnaggression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sensationColumn {
                get {
                    return this.columnsensation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn antipathyColumn {
                get {
                    return this.columnantipathy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gloatColumn {
                get {
                    return this.columngloat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn doubtColumn {
                get {
                    return this.columndoubt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn empathyColumn {
                get {
                    return this.columnempathy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn consciousnessColumn {
                get {
                    return this.columnconsciousness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ingratitudeColumn {
                get {
                    return this.columningratitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hopelessnessColumn {
                get {
                    return this.columnhopelessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn signalColumn {
                get {
                    return this.columnsignal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn alarmColumn {
                get {
                    return this.columnalarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dislikeColumn {
                get {
                    return this.columndislike;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stirColumn {
                get {
                    return this.columnstir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn distanceColumn {
                get {
                    return this.columndistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn smugnessColumn {
                get {
                    return this.columnsmugness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn repentanceColumn {
                get {
                    return this.columnrepentance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn easinessColumn {
                get {
                    return this.columneasiness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn friendlinessColumn {
                get {
                    return this.columnfriendliness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gravityColumn {
                get {
                    return this.columngravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn displeasureColumn {
                get {
                    return this.columndispleasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn discouragementColumn {
                get {
                    return this.columndiscouragement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn piqueColumn {
                get {
                    return this.columnpique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn benevolenceColumn {
                get {
                    return this.columnbenevolence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn chagrinColumn {
                get {
                    return this.columnchagrin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tensionColumn {
                get {
                    return this.columntension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn togethernessColumn {
                get {
                    return this.columntogetherness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn panicColumn {
                get {
                    return this.columnpanic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn eagernessColumn {
                get {
                    return this.columneagerness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pleasureColumn {
                get {
                    return this.columnpleasure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn excitementColumn {
                get {
                    return this.columnexcitement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn moodColumn {
                get {
                    return this.columnmood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn animosityColumn {
                get {
                    return this.columnanimosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn defeatismColumn {
                get {
                    return this.columndefeatism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn worshipColumn {
                get {
                    return this.columnworship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn repugnanceColumn {
                get {
                    return this.columnrepugnance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn grudgeColumn {
                get {
                    return this.columngrudge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn euphoriaColumn {
                get {
                    return this.columneuphoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn antagonismColumn {
                get {
                    return this.columnantagonism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn traitColumn {
                get {
                    return this.columntrait;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn brotherhoodColumn {
                get {
                    return this.columnbrotherhood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stewingColumn {
                get {
                    return this.columnstewing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn pityColumn {
                get {
                    return this.columnpity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dazeColumn {
                get {
                    return this.columndaze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sympathyColumn {
                get {
                    return this.columnsympathy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn annoyanceColumn {
                get {
                    return this.columnannoyance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn encouragementColumn {
                get {
                    return this.columnencouragement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn buoyancyColumn {
                get {
                    return this.columnbuoyancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn devotionColumn {
                get {
                    return this.columndevotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn triumphColumn {
                get {
                    return this.columntriumph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contemptColumn {
                get {
                    return this.columncontempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn belongingColumn {
                get {
                    return this.columnbelonging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sinkingColumn {
                get {
                    return this.columnsinking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn unhappinessColumn {
                get {
                    return this.columnunhappiness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn trepidationColumn {
                get {
                    return this.columntrepidation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admirationColumn {
                get {
                    return this.columnadmiration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn disapprovalColumn {
                get {
                    return this.columndisapproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn indifferenceColumn {
                get {
                    return this.columnindifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn affectionColumn {
                get {
                    return this.columnaffection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn astonishmentColumn {
                get {
                    return this.columnastonishment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn oppressionColumn {
                get {
                    return this.columnoppression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn languorColumn {
                get {
                    return this.columnlanguor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn coolnessColumn {
                get {
                    return this.columncoolness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn likingColumn {
                get {
                    return this.columnliking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn behaviourColumn {
                get {
                    return this.columnbehaviour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn peaceColumn {
                get {
                    return this.columnpeace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn misogynyColumn {
                get {
                    return this.columnmisogyny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn bangColumn {
                get {
                    return this.columnbang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cheerfulnessColumn {
                get {
                    return this.columncheerfulness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn creepsColumn {
                get {
                    return this.columncreeps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn agitationColumn {
                get {
                    return this.columnagitation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn boredomColumn {
                get {
                    return this.columnboredom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gratificationColumn {
                get {
                    return this.columngratification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hurtColumn {
                get {
                    return this.columnhurt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn agapeColumn {
                get {
                    return this.columnagape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn concernColumn {
                get {
                    return this.columnconcern;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ardorColumn {
                get {
                    return this.columnardor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn mourningColumn {
                get {
                    return this.columnmourning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn harassmentColumn {
                get {
                    return this.columnharassment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contentmentColumn {
                get {
                    return this.columncontentment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn closenessColumn {
                get {
                    return this.columncloseness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn surprisedColumn {
                get {
                    return this.columnsurprised;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn confusionColumn {
                get {
                    return this.columnconfusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn presageColumn {
                get {
                    return this.columnpresage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn approvalColumn {
                get {
                    return this.columnapproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wrathColumn {
                get {
                    return this.columnwrath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn danderColumn {
                get {
                    return this.columndander;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn reverenceColumn {
                get {
                    return this.columnreverence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contentColumn {
                get {
                    return this.columncontent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn amusementColumn {
                get {
                    return this.columnamusement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn indignationColumn {
                get {
                    return this.columnindignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fearlessnessColumn {
                get {
                    return this.columnfearlessness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn depreciationColumn {
                get {
                    return this.columndepreciation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn expectationColumn {
                get {
                    return this.columnexpectation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tendernessColumn {
                get {
                    return this.columntenderness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn miseryColumn {
                get {
                    return this.columnmisery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn depressionColumn {
                get {
                    return this.columndepression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn forgivenessColumn {
                get {
                    return this.columnforgiveness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn williesColumn {
                get {
                    return this.columnwillies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fitColumn {
                get {
                    return this.columnfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn comfortColumn {
                get {
                    return this.columncomfort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn shameColumn {
                get {
                    return this.columnshame;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn apprehensionColumn {
                get {
                    return this.columnapprehension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn delightColumn {
                get {
                    return this.columndelight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn jealousyColumn {
                get {
                    return this.columnjealousy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aggravationColumn {
                get {
                    return this.columnaggravation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn chillColumn {
                get {
                    return this.columnchill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn warpathColumn {
                get {
                    return this.columnwarpath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sereneColumn {
                get {
                    return this.columnserene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exuberanceColumn {
                get {
                    return this.columnexuberance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn resignationColumn {
                get {
                    return this.columnresignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gratitudeColumn {
                get {
                    return this.columngratitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn despondencyColumn {
                get {
                    return this.columndespondency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nirvanaColumn {
                get {
                    return this.columnnirvana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn lividityColumn {
                get {
                    return this.columnlividity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn emotionColumn {
                get {
                    return this.columnemotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn disappointmentColumn {
                get {
                    return this.columndisappointment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn horrorColumn {
                get {
                    return this.columnhorror;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn griefColumn {
                get {
                    return this.columngrief;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn distressColumn {
                get {
                    return this.columndistress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn intoxicationColumn {
                get {
                    return this.columnintoxication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn irritationColumn {
                get {
                    return this.columnirritation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn insecurityColumn {
                get {
                    return this.columninsecurity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn prideColumn {
                get {
                    return this.columnpride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn feverColumn {
                get {
                    return this.columnfever;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rejoicingColumn {
                get {
                    return this.columnrejoicing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn impatienceColumn {
                get {
                    return this.columnimpatience;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn politenessColumn {
                get {
                    return this.columnpoliteness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tranquillityColumn {
                get {
                    return this.columntranquillity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hilarityColumn {
                get {
                    return this.columnhilarity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn furyColumn {
                get {
                    return this.columnfury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gladnessColumn {
                get {
                    return this.columngladness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn thingColumn {
                get {
                    return this.columnthing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nauseaColumn {
                get {
                    return this.columnnausea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn calmnessColumn {
                get {
                    return this.columncalmness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fulfillmentColumn {
                get {
                    return this.columnfulfillment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ecstasyColumn {
                get {
                    return this.columnecstasy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn elationColumn {
                get {
                    return this.columnelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn playfulnessColumn {
                get {
                    return this.columnplayfulness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exhilarationColumn {
                get {
                    return this.columnexhilaration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn titillationColumn {
                get {
                    return this.columntitillation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn gratefulnessColumn {
                get {
                    return this.columngratefulness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn diffidenceColumn {
                get {
                    return this.columndiffidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn radianceColumn {
                get {
                    return this.columnradiance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn sorrowColumn {
                get {
                    return this.columnsorrow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn confidenceColumn {
                get {
                    return this.columnconfidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn securityColumn {
                get {
                    return this.columnsecurity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn egoColumn {
                get {
                    return this.columnego;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn hostilityColumn {
                get {
                    return this.columnhostility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn frustrationColumn {
                get {
                    return this.columnfrustration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn attritionColumn {
                get {
                    return this.columnattrition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn angstColumn {
                get {
                    return this.columnangst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn shockColumn {
                get {
                    return this.columnshock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn preferenceColumn {
                get {
                    return this.columnpreference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn enthusiasmColumn {
                get {
                    return this.columnenthusiasm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn isolationColumn {
                get {
                    return this.columnisolation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn conscienceColumn {
                get {
                    return this.columnconscience;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn scrupleColumn {
                get {
                    return this.columnscruple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn worryColumn {
                get {
                    return this.columnworry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn earnestnessColumn {
                get {
                    return this.columnearnestness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn malevolenceColumn {
                get {
                    return this.columnmalevolence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aweColumn {
                get {
                    return this.columnawe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn guiltColumn {
                get {
                    return this.columnguilt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn identificationColumn {
                get {
                    return this.columnidentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresRow this[int index] {
                get {
                    return ((word_scoresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event word_scoresRowChangeEventHandler word_scoresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event word_scoresRowChangeEventHandler word_scoresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event word_scoresRowChangeEventHandler word_scoresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event word_scoresRowChangeEventHandler word_scoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addword_scoresRow(word_scoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresRow Addword_scoresRow(
                        string word, 
                        double joy, 
                        double surprise, 
                        double trust, 
                        double anticipation, 
                        double fear, 
                        double anger, 
                        double sadness, 
                        double disgust, 
                        double happiness, 
                        double levity, 
                        double hate, 
                        double loyalty, 
                        double melancholy, 
                        double anxiety, 
                        double embarrassment, 
                        double regard, 
                        double stress, 
                        double gusto, 
                        double compunction, 
                        double cynicism, 
                        double situation, 
                        double umbrage, 
                        double favor, 
                        double meekness, 
                        double compassion, 
                        double withdrawal, 
                        double scare, 
                        double unrest, 
                        double calm, 
                        double courage, 
                        double despair, 
                        double fidget, 
                        double shyness, 
                        double apathy, 
                        double hysteria, 
                        double shadow, 
                        double resentment, 
                        double optimism, 
                        double heartstrings, 
                        double bonheur, 
                        double dudgeon, 
                        double merriment, 
                        double hope, 
                        double foreboding, 
                        double envy, 
                        double interest, 
                        double relaxed, 
                        double cruelty, 
                        double helplessness, 
                        double solicitude, 
                        double satisfaction, 
                        double suspense, 
                        double fondness, 
                        double dolor, 
                        double weakness, 
                        double electricity, 
                        double esteem, 
                        double woe, 
                        double relieved, 
                        double wonder, 
                        double attachment, 
                        double pessimism, 
                        double malice, 
                        double love, 
                        double compatibility, 
                        double timidity, 
                        double blessedness, 
                        double exultation, 
                        double tumult, 
                        double alienation, 
                        double humility, 
                        double powerlessness, 
                        double complacency, 
                        double gloom, 
                        double aggression, 
                        double sensation, 
                        double antipathy, 
                        double gloat, 
                        double doubt, 
                        double empathy, 
                        double consciousness, 
                        double ingratitude, 
                        double hopelessness, 
                        double signal, 
                        double alarm, 
                        double dislike, 
                        double stir, 
                        double distance, 
                        double smugness, 
                        double repentance, 
                        double easiness, 
                        double friendliness, 
                        double gravity, 
                        double displeasure, 
                        double discouragement, 
                        double pique, 
                        double benevolence, 
                        double chagrin, 
                        double tension, 
                        double togetherness, 
                        double panic, 
                        double eagerness, 
                        double pleasure, 
                        double excitement, 
                        double mood, 
                        double animosity, 
                        double defeatism, 
                        double worship, 
                        double repugnance, 
                        double grudge, 
                        double euphoria, 
                        double antagonism, 
                        double trait, 
                        double brotherhood, 
                        double stewing, 
                        double pity, 
                        double daze, 
                        double sympathy, 
                        double annoyance, 
                        double encouragement, 
                        double buoyancy, 
                        double devotion, 
                        double triumph, 
                        double contempt, 
                        double belonging, 
                        double sinking, 
                        double unhappiness, 
                        double trepidation, 
                        double admiration, 
                        double disapproval, 
                        double indifference, 
                        double affection, 
                        double astonishment, 
                        double oppression, 
                        double languor, 
                        double coolness, 
                        double liking, 
                        double behaviour, 
                        double peace, 
                        double misogyny, 
                        double bang, 
                        double cheerfulness, 
                        double creeps, 
                        double agitation, 
                        double boredom, 
                        double gratification, 
                        double hurt, 
                        double agape, 
                        double concern, 
                        double ardor, 
                        double mourning, 
                        double harassment, 
                        double contentment, 
                        double closeness, 
                        double surprised, 
                        double confusion, 
                        double presage, 
                        double approval, 
                        double state, 
                        double wrath, 
                        double dander, 
                        double reverence, 
                        double content, 
                        double amusement, 
                        double indignation, 
                        double fearlessness, 
                        double depreciation, 
                        double expectation, 
                        double tenderness, 
                        double misery, 
                        double depression, 
                        double forgiveness, 
                        double willies, 
                        double fit, 
                        double comfort, 
                        double shame, 
                        double apprehension, 
                        double delight, 
                        double jealousy, 
                        double aggravation, 
                        double chill, 
                        double warpath, 
                        double serene, 
                        double exuberance, 
                        double resignation, 
                        double gratitude, 
                        double despondency, 
                        double nirvana, 
                        double lividity, 
                        double emotion, 
                        double disappointment, 
                        double horror, 
                        double grief, 
                        double weight, 
                        double distress, 
                        double intoxication, 
                        double irritation, 
                        double insecurity, 
                        double pride, 
                        double fever, 
                        double rejoicing, 
                        double impatience, 
                        double politeness, 
                        double tranquillity, 
                        double hilarity, 
                        double fury, 
                        double gladness, 
                        double thing, 
                        double nausea, 
                        double calmness, 
                        double fulfillment, 
                        double ecstasy, 
                        double elation, 
                        double playfulness, 
                        double exhilaration, 
                        double titillation, 
                        double gratefulness, 
                        double diffidence, 
                        double radiance, 
                        double sorrow, 
                        double confidence, 
                        double security, 
                        double ego, 
                        double hostility, 
                        double frustration, 
                        double attrition, 
                        double angst, 
                        double shock, 
                        double preference, 
                        double enthusiasm, 
                        double isolation, 
                        double conscience, 
                        double scruple, 
                        double worry, 
                        double earnestness, 
                        double malevolence, 
                        double awe, 
                        double guilt, 
                        double identification) {
                word_scoresRow rowword_scoresRow = ((word_scoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        word,
                        joy,
                        surprise,
                        trust,
                        anticipation,
                        fear,
                        anger,
                        sadness,
                        disgust,
                        happiness,
                        levity,
                        hate,
                        loyalty,
                        melancholy,
                        anxiety,
                        embarrassment,
                        regard,
                        stress,
                        gusto,
                        compunction,
                        cynicism,
                        situation,
                        umbrage,
                        favor,
                        meekness,
                        compassion,
                        withdrawal,
                        scare,
                        unrest,
                        calm,
                        courage,
                        despair,
                        fidget,
                        shyness,
                        apathy,
                        hysteria,
                        shadow,
                        resentment,
                        optimism,
                        heartstrings,
                        bonheur,
                        dudgeon,
                        merriment,
                        hope,
                        foreboding,
                        envy,
                        interest,
                        relaxed,
                        cruelty,
                        helplessness,
                        solicitude,
                        satisfaction,
                        suspense,
                        fondness,
                        dolor,
                        weakness,
                        electricity,
                        esteem,
                        woe,
                        relieved,
                        wonder,
                        attachment,
                        pessimism,
                        malice,
                        love,
                        compatibility,
                        timidity,
                        blessedness,
                        exultation,
                        tumult,
                        alienation,
                        humility,
                        powerlessness,
                        complacency,
                        gloom,
                        aggression,
                        sensation,
                        antipathy,
                        gloat,
                        doubt,
                        empathy,
                        consciousness,
                        ingratitude,
                        hopelessness,
                        signal,
                        alarm,
                        dislike,
                        stir,
                        distance,
                        smugness,
                        repentance,
                        easiness,
                        friendliness,
                        gravity,
                        displeasure,
                        discouragement,
                        pique,
                        benevolence,
                        chagrin,
                        tension,
                        togetherness,
                        panic,
                        eagerness,
                        pleasure,
                        excitement,
                        mood,
                        animosity,
                        defeatism,
                        worship,
                        repugnance,
                        grudge,
                        euphoria,
                        antagonism,
                        trait,
                        brotherhood,
                        stewing,
                        pity,
                        daze,
                        sympathy,
                        annoyance,
                        encouragement,
                        buoyancy,
                        devotion,
                        triumph,
                        contempt,
                        belonging,
                        sinking,
                        unhappiness,
                        trepidation,
                        admiration,
                        disapproval,
                        indifference,
                        affection,
                        astonishment,
                        oppression,
                        languor,
                        coolness,
                        liking,
                        behaviour,
                        peace,
                        misogyny,
                        bang,
                        cheerfulness,
                        creeps,
                        agitation,
                        boredom,
                        gratification,
                        hurt,
                        agape,
                        concern,
                        ardor,
                        mourning,
                        harassment,
                        contentment,
                        closeness,
                        surprised,
                        confusion,
                        presage,
                        approval,
                        state,
                        wrath,
                        dander,
                        reverence,
                        content,
                        amusement,
                        indignation,
                        fearlessness,
                        depreciation,
                        expectation,
                        tenderness,
                        misery,
                        depression,
                        forgiveness,
                        willies,
                        fit,
                        comfort,
                        shame,
                        apprehension,
                        delight,
                        jealousy,
                        aggravation,
                        chill,
                        warpath,
                        serene,
                        exuberance,
                        resignation,
                        gratitude,
                        despondency,
                        nirvana,
                        lividity,
                        emotion,
                        disappointment,
                        horror,
                        grief,
                        weight,
                        distress,
                        intoxication,
                        irritation,
                        insecurity,
                        pride,
                        fever,
                        rejoicing,
                        impatience,
                        politeness,
                        tranquillity,
                        hilarity,
                        fury,
                        gladness,
                        thing,
                        nausea,
                        calmness,
                        fulfillment,
                        ecstasy,
                        elation,
                        playfulness,
                        exhilaration,
                        titillation,
                        gratefulness,
                        diffidence,
                        radiance,
                        sorrow,
                        confidence,
                        security,
                        ego,
                        hostility,
                        frustration,
                        attrition,
                        angst,
                        shock,
                        preference,
                        enthusiasm,
                        isolation,
                        conscience,
                        scruple,
                        worry,
                        earnestness,
                        malevolence,
                        awe,
                        guilt,
                        identification};
                rowword_scoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowword_scoresRow);
                return rowword_scoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                word_scoresDataTable cln = ((word_scoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new word_scoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnword = base.Columns["word"];
                this.columnjoy = base.Columns["joy"];
                this.columnsurprise = base.Columns["surprise"];
                this.columntrust = base.Columns["trust"];
                this.columnanticipation = base.Columns["anticipation"];
                this.columnfear = base.Columns["fear"];
                this.columnanger = base.Columns["anger"];
                this.columnsadness = base.Columns["sadness"];
                this.columndisgust = base.Columns["disgust"];
                this.columnhappiness = base.Columns["happiness"];
                this.columnlevity = base.Columns["levity"];
                this.columnhate = base.Columns["hate"];
                this.columnloyalty = base.Columns["loyalty"];
                this.columnmelancholy = base.Columns["melancholy"];
                this.columnanxiety = base.Columns["anxiety"];
                this.columnembarrassment = base.Columns["embarrassment"];
                this.columnregard = base.Columns["regard"];
                this.columnstress = base.Columns["stress"];
                this.columngusto = base.Columns["gusto"];
                this.columncompunction = base.Columns["compunction"];
                this.columncynicism = base.Columns["cynicism"];
                this.columnsituation = base.Columns["situation"];
                this.columnumbrage = base.Columns["umbrage"];
                this.columnfavor = base.Columns["favor"];
                this.columnmeekness = base.Columns["meekness"];
                this.columncompassion = base.Columns["compassion"];
                this.columnwithdrawal = base.Columns["withdrawal"];
                this.columnscare = base.Columns["scare"];
                this.columnunrest = base.Columns["unrest"];
                this.columncalm = base.Columns["calm"];
                this.columncourage = base.Columns["courage"];
                this.columndespair = base.Columns["despair"];
                this.columnfidget = base.Columns["fidget"];
                this.columnshyness = base.Columns["shyness"];
                this.columnapathy = base.Columns["apathy"];
                this.columnhysteria = base.Columns["hysteria"];
                this.columnshadow = base.Columns["shadow"];
                this.columnresentment = base.Columns["resentment"];
                this.columnoptimism = base.Columns["optimism"];
                this.columnheartstrings = base.Columns["heartstrings"];
                this.columnbonheur = base.Columns["bonheur"];
                this.columndudgeon = base.Columns["dudgeon"];
                this.columnmerriment = base.Columns["merriment"];
                this.columnhope = base.Columns["hope"];
                this.columnforeboding = base.Columns["foreboding"];
                this.columnenvy = base.Columns["envy"];
                this.columninterest = base.Columns["interest"];
                this.columnrelaxed = base.Columns["relaxed"];
                this.columncruelty = base.Columns["cruelty"];
                this.columnhelplessness = base.Columns["helplessness"];
                this.columnsolicitude = base.Columns["solicitude"];
                this.columnsatisfaction = base.Columns["satisfaction"];
                this.columnsuspense = base.Columns["suspense"];
                this.columnfondness = base.Columns["fondness"];
                this.columndolor = base.Columns["dolor"];
                this.columnweakness = base.Columns["weakness"];
                this.columnelectricity = base.Columns["electricity"];
                this.columnesteem = base.Columns["esteem"];
                this.columnwoe = base.Columns["woe"];
                this.columnrelieved = base.Columns["relieved"];
                this.columnwonder = base.Columns["wonder"];
                this.columnattachment = base.Columns["attachment"];
                this.columnpessimism = base.Columns["pessimism"];
                this.columnmalice = base.Columns["malice"];
                this.columnlove = base.Columns["love"];
                this.columncompatibility = base.Columns["compatibility"];
                this.columntimidity = base.Columns["timidity"];
                this.columnblessedness = base.Columns["blessedness"];
                this.columnexultation = base.Columns["exultation"];
                this.columntumult = base.Columns["tumult"];
                this.columnalienation = base.Columns["alienation"];
                this.columnhumility = base.Columns["humility"];
                this.columnpowerlessness = base.Columns["powerlessness"];
                this.columncomplacency = base.Columns["complacency"];
                this.columngloom = base.Columns["gloom"];
                this.columnaggression = base.Columns["aggression"];
                this.columnsensation = base.Columns["sensation"];
                this.columnantipathy = base.Columns["antipathy"];
                this.columngloat = base.Columns["gloat"];
                this.columndoubt = base.Columns["doubt"];
                this.columnempathy = base.Columns["empathy"];
                this.columnconsciousness = base.Columns["consciousness"];
                this.columningratitude = base.Columns["ingratitude"];
                this.columnhopelessness = base.Columns["hopelessness"];
                this.columnsignal = base.Columns["signal"];
                this.columnalarm = base.Columns["alarm"];
                this.columndislike = base.Columns["dislike"];
                this.columnstir = base.Columns["stir"];
                this.columndistance = base.Columns["distance"];
                this.columnsmugness = base.Columns["smugness"];
                this.columnrepentance = base.Columns["repentance"];
                this.columneasiness = base.Columns["easiness"];
                this.columnfriendliness = base.Columns["friendliness"];
                this.columngravity = base.Columns["gravity"];
                this.columndispleasure = base.Columns["displeasure"];
                this.columndiscouragement = base.Columns["discouragement"];
                this.columnpique = base.Columns["pique"];
                this.columnbenevolence = base.Columns["benevolence"];
                this.columnchagrin = base.Columns["chagrin"];
                this.columntension = base.Columns["tension"];
                this.columntogetherness = base.Columns["togetherness"];
                this.columnpanic = base.Columns["panic"];
                this.columneagerness = base.Columns["eagerness"];
                this.columnpleasure = base.Columns["pleasure"];
                this.columnexcitement = base.Columns["excitement"];
                this.columnmood = base.Columns["mood"];
                this.columnanimosity = base.Columns["animosity"];
                this.columndefeatism = base.Columns["defeatism"];
                this.columnworship = base.Columns["worship"];
                this.columnrepugnance = base.Columns["repugnance"];
                this.columngrudge = base.Columns["grudge"];
                this.columneuphoria = base.Columns["euphoria"];
                this.columnantagonism = base.Columns["antagonism"];
                this.columntrait = base.Columns["trait"];
                this.columnbrotherhood = base.Columns["brotherhood"];
                this.columnstewing = base.Columns["stewing"];
                this.columnpity = base.Columns["pity"];
                this.columndaze = base.Columns["daze"];
                this.columnsympathy = base.Columns["sympathy"];
                this.columnannoyance = base.Columns["annoyance"];
                this.columnencouragement = base.Columns["encouragement"];
                this.columnbuoyancy = base.Columns["buoyancy"];
                this.columndevotion = base.Columns["devotion"];
                this.columntriumph = base.Columns["triumph"];
                this.columncontempt = base.Columns["contempt"];
                this.columnbelonging = base.Columns["belonging"];
                this.columnsinking = base.Columns["sinking"];
                this.columnunhappiness = base.Columns["unhappiness"];
                this.columntrepidation = base.Columns["trepidation"];
                this.columnadmiration = base.Columns["admiration"];
                this.columndisapproval = base.Columns["disapproval"];
                this.columnindifference = base.Columns["indifference"];
                this.columnaffection = base.Columns["affection"];
                this.columnastonishment = base.Columns["astonishment"];
                this.columnoppression = base.Columns["oppression"];
                this.columnlanguor = base.Columns["languor"];
                this.columncoolness = base.Columns["coolness"];
                this.columnliking = base.Columns["liking"];
                this.columnbehaviour = base.Columns["behaviour"];
                this.columnpeace = base.Columns["peace"];
                this.columnmisogyny = base.Columns["misogyny"];
                this.columnbang = base.Columns["bang"];
                this.columncheerfulness = base.Columns["cheerfulness"];
                this.columncreeps = base.Columns["creeps"];
                this.columnagitation = base.Columns["agitation"];
                this.columnboredom = base.Columns["boredom"];
                this.columngratification = base.Columns["gratification"];
                this.columnhurt = base.Columns["hurt"];
                this.columnagape = base.Columns["agape"];
                this.columnconcern = base.Columns["concern"];
                this.columnardor = base.Columns["ardor"];
                this.columnmourning = base.Columns["mourning"];
                this.columnharassment = base.Columns["harassment"];
                this.columncontentment = base.Columns["contentment"];
                this.columncloseness = base.Columns["closeness"];
                this.columnsurprised = base.Columns["surprised"];
                this.columnconfusion = base.Columns["confusion"];
                this.columnpresage = base.Columns["presage"];
                this.columnapproval = base.Columns["approval"];
                this.columnstate = base.Columns["state"];
                this.columnwrath = base.Columns["wrath"];
                this.columndander = base.Columns["dander"];
                this.columnreverence = base.Columns["reverence"];
                this.columncontent = base.Columns["content"];
                this.columnamusement = base.Columns["amusement"];
                this.columnindignation = base.Columns["indignation"];
                this.columnfearlessness = base.Columns["fearlessness"];
                this.columndepreciation = base.Columns["depreciation"];
                this.columnexpectation = base.Columns["expectation"];
                this.columntenderness = base.Columns["tenderness"];
                this.columnmisery = base.Columns["misery"];
                this.columndepression = base.Columns["depression"];
                this.columnforgiveness = base.Columns["forgiveness"];
                this.columnwillies = base.Columns["willies"];
                this.columnfit = base.Columns["fit"];
                this.columncomfort = base.Columns["comfort"];
                this.columnshame = base.Columns["shame"];
                this.columnapprehension = base.Columns["apprehension"];
                this.columndelight = base.Columns["delight"];
                this.columnjealousy = base.Columns["jealousy"];
                this.columnaggravation = base.Columns["aggravation"];
                this.columnchill = base.Columns["chill"];
                this.columnwarpath = base.Columns["warpath"];
                this.columnserene = base.Columns["serene"];
                this.columnexuberance = base.Columns["exuberance"];
                this.columnresignation = base.Columns["resignation"];
                this.columngratitude = base.Columns["gratitude"];
                this.columndespondency = base.Columns["despondency"];
                this.columnnirvana = base.Columns["nirvana"];
                this.columnlividity = base.Columns["lividity"];
                this.columnemotion = base.Columns["emotion"];
                this.columndisappointment = base.Columns["disappointment"];
                this.columnhorror = base.Columns["horror"];
                this.columngrief = base.Columns["grief"];
                this.columnweight = base.Columns["weight"];
                this.columndistress = base.Columns["distress"];
                this.columnintoxication = base.Columns["intoxication"];
                this.columnirritation = base.Columns["irritation"];
                this.columninsecurity = base.Columns["insecurity"];
                this.columnpride = base.Columns["pride"];
                this.columnfever = base.Columns["fever"];
                this.columnrejoicing = base.Columns["rejoicing"];
                this.columnimpatience = base.Columns["impatience"];
                this.columnpoliteness = base.Columns["politeness"];
                this.columntranquillity = base.Columns["tranquillity"];
                this.columnhilarity = base.Columns["hilarity"];
                this.columnfury = base.Columns["fury"];
                this.columngladness = base.Columns["gladness"];
                this.columnthing = base.Columns["thing"];
                this.columnnausea = base.Columns["nausea"];
                this.columncalmness = base.Columns["calmness"];
                this.columnfulfillment = base.Columns["fulfillment"];
                this.columnecstasy = base.Columns["ecstasy"];
                this.columnelation = base.Columns["elation"];
                this.columnplayfulness = base.Columns["playfulness"];
                this.columnexhilaration = base.Columns["exhilaration"];
                this.columntitillation = base.Columns["titillation"];
                this.columngratefulness = base.Columns["gratefulness"];
                this.columndiffidence = base.Columns["diffidence"];
                this.columnradiance = base.Columns["radiance"];
                this.columnsorrow = base.Columns["sorrow"];
                this.columnconfidence = base.Columns["confidence"];
                this.columnsecurity = base.Columns["security"];
                this.columnego = base.Columns["ego"];
                this.columnhostility = base.Columns["hostility"];
                this.columnfrustration = base.Columns["frustration"];
                this.columnattrition = base.Columns["attrition"];
                this.columnangst = base.Columns["angst"];
                this.columnshock = base.Columns["shock"];
                this.columnpreference = base.Columns["preference"];
                this.columnenthusiasm = base.Columns["enthusiasm"];
                this.columnisolation = base.Columns["isolation"];
                this.columnconscience = base.Columns["conscience"];
                this.columnscruple = base.Columns["scruple"];
                this.columnworry = base.Columns["worry"];
                this.columnearnestness = base.Columns["earnestness"];
                this.columnmalevolence = base.Columns["malevolence"];
                this.columnawe = base.Columns["awe"];
                this.columnguilt = base.Columns["guilt"];
                this.columnidentification = base.Columns["identification"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnword = new global::System.Data.DataColumn("word", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnword);
                this.columnjoy = new global::System.Data.DataColumn("joy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjoy);
                this.columnsurprise = new global::System.Data.DataColumn("surprise", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurprise);
                this.columntrust = new global::System.Data.DataColumn("trust", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrust);
                this.columnanticipation = new global::System.Data.DataColumn("anticipation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanticipation);
                this.columnfear = new global::System.Data.DataColumn("fear", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfear);
                this.columnanger = new global::System.Data.DataColumn("anger", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanger);
                this.columnsadness = new global::System.Data.DataColumn("sadness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsadness);
                this.columndisgust = new global::System.Data.DataColumn("disgust", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisgust);
                this.columnhappiness = new global::System.Data.DataColumn("happiness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhappiness);
                this.columnlevity = new global::System.Data.DataColumn("levity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlevity);
                this.columnhate = new global::System.Data.DataColumn("hate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhate);
                this.columnloyalty = new global::System.Data.DataColumn("loyalty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloyalty);
                this.columnmelancholy = new global::System.Data.DataColumn("melancholy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmelancholy);
                this.columnanxiety = new global::System.Data.DataColumn("anxiety", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanxiety);
                this.columnembarrassment = new global::System.Data.DataColumn("embarrassment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnembarrassment);
                this.columnregard = new global::System.Data.DataColumn("regard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregard);
                this.columnstress = new global::System.Data.DataColumn("stress", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstress);
                this.columngusto = new global::System.Data.DataColumn("gusto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngusto);
                this.columncompunction = new global::System.Data.DataColumn("compunction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompunction);
                this.columncynicism = new global::System.Data.DataColumn("cynicism", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncynicism);
                this.columnsituation = new global::System.Data.DataColumn("situation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsituation);
                this.columnumbrage = new global::System.Data.DataColumn("umbrage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnumbrage);
                this.columnfavor = new global::System.Data.DataColumn("favor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfavor);
                this.columnmeekness = new global::System.Data.DataColumn("meekness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeekness);
                this.columncompassion = new global::System.Data.DataColumn("compassion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompassion);
                this.columnwithdrawal = new global::System.Data.DataColumn("withdrawal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwithdrawal);
                this.columnscare = new global::System.Data.DataColumn("scare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscare);
                this.columnunrest = new global::System.Data.DataColumn("unrest", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunrest);
                this.columncalm = new global::System.Data.DataColumn("calm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalm);
                this.columncourage = new global::System.Data.DataColumn("courage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncourage);
                this.columndespair = new global::System.Data.DataColumn("despair", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndespair);
                this.columnfidget = new global::System.Data.DataColumn("fidget", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfidget);
                this.columnshyness = new global::System.Data.DataColumn("shyness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshyness);
                this.columnapathy = new global::System.Data.DataColumn("apathy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapathy);
                this.columnhysteria = new global::System.Data.DataColumn("hysteria", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhysteria);
                this.columnshadow = new global::System.Data.DataColumn("shadow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshadow);
                this.columnresentment = new global::System.Data.DataColumn("resentment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresentment);
                this.columnoptimism = new global::System.Data.DataColumn("optimism", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoptimism);
                this.columnheartstrings = new global::System.Data.DataColumn("heartstrings", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheartstrings);
                this.columnbonheur = new global::System.Data.DataColumn("bonheur", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbonheur);
                this.columndudgeon = new global::System.Data.DataColumn("dudgeon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndudgeon);
                this.columnmerriment = new global::System.Data.DataColumn("merriment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmerriment);
                this.columnhope = new global::System.Data.DataColumn("hope", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhope);
                this.columnforeboding = new global::System.Data.DataColumn("foreboding", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforeboding);
                this.columnenvy = new global::System.Data.DataColumn("envy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenvy);
                this.columninterest = new global::System.Data.DataColumn("interest", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterest);
                this.columnrelaxed = new global::System.Data.DataColumn("relaxed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelaxed);
                this.columncruelty = new global::System.Data.DataColumn("cruelty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncruelty);
                this.columnhelplessness = new global::System.Data.DataColumn("helplessness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhelplessness);
                this.columnsolicitude = new global::System.Data.DataColumn("solicitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsolicitude);
                this.columnsatisfaction = new global::System.Data.DataColumn("satisfaction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsatisfaction);
                this.columnsuspense = new global::System.Data.DataColumn("suspense", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuspense);
                this.columnfondness = new global::System.Data.DataColumn("fondness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfondness);
                this.columndolor = new global::System.Data.DataColumn("dolor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndolor);
                this.columnweakness = new global::System.Data.DataColumn("weakness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweakness);
                this.columnelectricity = new global::System.Data.DataColumn("electricity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelectricity);
                this.columnesteem = new global::System.Data.DataColumn("esteem", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnesteem);
                this.columnwoe = new global::System.Data.DataColumn("woe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwoe);
                this.columnrelieved = new global::System.Data.DataColumn("relieved", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelieved);
                this.columnwonder = new global::System.Data.DataColumn("wonder", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwonder);
                this.columnattachment = new global::System.Data.DataColumn("attachment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattachment);
                this.columnpessimism = new global::System.Data.DataColumn("pessimism", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpessimism);
                this.columnmalice = new global::System.Data.DataColumn("malice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmalice);
                this.columnlove = new global::System.Data.DataColumn("love", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlove);
                this.columncompatibility = new global::System.Data.DataColumn("compatibility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompatibility);
                this.columntimidity = new global::System.Data.DataColumn("timidity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntimidity);
                this.columnblessedness = new global::System.Data.DataColumn("blessedness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblessedness);
                this.columnexultation = new global::System.Data.DataColumn("exultation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexultation);
                this.columntumult = new global::System.Data.DataColumn("tumult", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntumult);
                this.columnalienation = new global::System.Data.DataColumn("alienation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalienation);
                this.columnhumility = new global::System.Data.DataColumn("humility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhumility);
                this.columnpowerlessness = new global::System.Data.DataColumn("powerlessness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpowerlessness);
                this.columncomplacency = new global::System.Data.DataColumn("complacency", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomplacency);
                this.columngloom = new global::System.Data.DataColumn("gloom", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngloom);
                this.columnaggression = new global::System.Data.DataColumn("aggression", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaggression);
                this.columnsensation = new global::System.Data.DataColumn("sensation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsensation);
                this.columnantipathy = new global::System.Data.DataColumn("antipathy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnantipathy);
                this.columngloat = new global::System.Data.DataColumn("gloat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngloat);
                this.columndoubt = new global::System.Data.DataColumn("doubt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoubt);
                this.columnempathy = new global::System.Data.DataColumn("empathy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempathy);
                this.columnconsciousness = new global::System.Data.DataColumn("consciousness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconsciousness);
                this.columningratitude = new global::System.Data.DataColumn("ingratitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columningratitude);
                this.columnhopelessness = new global::System.Data.DataColumn("hopelessness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhopelessness);
                this.columnsignal = new global::System.Data.DataColumn("signal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsignal);
                this.columnalarm = new global::System.Data.DataColumn("alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm);
                this.columndislike = new global::System.Data.DataColumn("dislike", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndislike);
                this.columnstir = new global::System.Data.DataColumn("stir", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstir);
                this.columndistance = new global::System.Data.DataColumn("distance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistance);
                this.columnsmugness = new global::System.Data.DataColumn("smugness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsmugness);
                this.columnrepentance = new global::System.Data.DataColumn("repentance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepentance);
                this.columneasiness = new global::System.Data.DataColumn("easiness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneasiness);
                this.columnfriendliness = new global::System.Data.DataColumn("friendliness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfriendliness);
                this.columngravity = new global::System.Data.DataColumn("gravity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngravity);
                this.columndispleasure = new global::System.Data.DataColumn("displeasure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispleasure);
                this.columndiscouragement = new global::System.Data.DataColumn("discouragement", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscouragement);
                this.columnpique = new global::System.Data.DataColumn("pique", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpique);
                this.columnbenevolence = new global::System.Data.DataColumn("benevolence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbenevolence);
                this.columnchagrin = new global::System.Data.DataColumn("chagrin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchagrin);
                this.columntension = new global::System.Data.DataColumn("tension", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntension);
                this.columntogetherness = new global::System.Data.DataColumn("togetherness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntogetherness);
                this.columnpanic = new global::System.Data.DataColumn("panic", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpanic);
                this.columneagerness = new global::System.Data.DataColumn("eagerness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneagerness);
                this.columnpleasure = new global::System.Data.DataColumn("pleasure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpleasure);
                this.columnexcitement = new global::System.Data.DataColumn("excitement", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexcitement);
                this.columnmood = new global::System.Data.DataColumn("mood", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmood);
                this.columnanimosity = new global::System.Data.DataColumn("animosity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanimosity);
                this.columndefeatism = new global::System.Data.DataColumn("defeatism", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndefeatism);
                this.columnworship = new global::System.Data.DataColumn("worship", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworship);
                this.columnrepugnance = new global::System.Data.DataColumn("repugnance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepugnance);
                this.columngrudge = new global::System.Data.DataColumn("grudge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrudge);
                this.columneuphoria = new global::System.Data.DataColumn("euphoria", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneuphoria);
                this.columnantagonism = new global::System.Data.DataColumn("antagonism", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnantagonism);
                this.columntrait = new global::System.Data.DataColumn("trait", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrait);
                this.columnbrotherhood = new global::System.Data.DataColumn("brotherhood", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrotherhood);
                this.columnstewing = new global::System.Data.DataColumn("stewing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstewing);
                this.columnpity = new global::System.Data.DataColumn("pity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpity);
                this.columndaze = new global::System.Data.DataColumn("daze", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaze);
                this.columnsympathy = new global::System.Data.DataColumn("sympathy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsympathy);
                this.columnannoyance = new global::System.Data.DataColumn("annoyance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnannoyance);
                this.columnencouragement = new global::System.Data.DataColumn("encouragement", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencouragement);
                this.columnbuoyancy = new global::System.Data.DataColumn("buoyancy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuoyancy);
                this.columndevotion = new global::System.Data.DataColumn("devotion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevotion);
                this.columntriumph = new global::System.Data.DataColumn("triumph", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntriumph);
                this.columncontempt = new global::System.Data.DataColumn("contempt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontempt);
                this.columnbelonging = new global::System.Data.DataColumn("belonging", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbelonging);
                this.columnsinking = new global::System.Data.DataColumn("sinking", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsinking);
                this.columnunhappiness = new global::System.Data.DataColumn("unhappiness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunhappiness);
                this.columntrepidation = new global::System.Data.DataColumn("trepidation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrepidation);
                this.columnadmiration = new global::System.Data.DataColumn("admiration", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmiration);
                this.columndisapproval = new global::System.Data.DataColumn("disapproval", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisapproval);
                this.columnindifference = new global::System.Data.DataColumn("indifference", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnindifference);
                this.columnaffection = new global::System.Data.DataColumn("affection", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaffection);
                this.columnastonishment = new global::System.Data.DataColumn("astonishment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnastonishment);
                this.columnoppression = new global::System.Data.DataColumn("oppression", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoppression);
                this.columnlanguor = new global::System.Data.DataColumn("languor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlanguor);
                this.columncoolness = new global::System.Data.DataColumn("coolness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoolness);
                this.columnliking = new global::System.Data.DataColumn("liking", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnliking);
                this.columnbehaviour = new global::System.Data.DataColumn("behaviour", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbehaviour);
                this.columnpeace = new global::System.Data.DataColumn("peace", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeace);
                this.columnmisogyny = new global::System.Data.DataColumn("misogyny", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmisogyny);
                this.columnbang = new global::System.Data.DataColumn("bang", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbang);
                this.columncheerfulness = new global::System.Data.DataColumn("cheerfulness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheerfulness);
                this.columncreeps = new global::System.Data.DataColumn("creeps", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreeps);
                this.columnagitation = new global::System.Data.DataColumn("agitation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagitation);
                this.columnboredom = new global::System.Data.DataColumn("boredom", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboredom);
                this.columngratification = new global::System.Data.DataColumn("gratification", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngratification);
                this.columnhurt = new global::System.Data.DataColumn("hurt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhurt);
                this.columnagape = new global::System.Data.DataColumn("agape", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagape);
                this.columnconcern = new global::System.Data.DataColumn("concern", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcern);
                this.columnardor = new global::System.Data.DataColumn("ardor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnardor);
                this.columnmourning = new global::System.Data.DataColumn("mourning", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmourning);
                this.columnharassment = new global::System.Data.DataColumn("harassment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnharassment);
                this.columncontentment = new global::System.Data.DataColumn("contentment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontentment);
                this.columncloseness = new global::System.Data.DataColumn("closeness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncloseness);
                this.columnsurprised = new global::System.Data.DataColumn("surprised", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurprised);
                this.columnconfusion = new global::System.Data.DataColumn("confusion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfusion);
                this.columnpresage = new global::System.Data.DataColumn("presage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpresage);
                this.columnapproval = new global::System.Data.DataColumn("approval", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapproval);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnwrath = new global::System.Data.DataColumn("wrath", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwrath);
                this.columndander = new global::System.Data.DataColumn("dander", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndander);
                this.columnreverence = new global::System.Data.DataColumn("reverence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreverence);
                this.columncontent = new global::System.Data.DataColumn("content", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontent);
                this.columnamusement = new global::System.Data.DataColumn("amusement", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamusement);
                this.columnindignation = new global::System.Data.DataColumn("indignation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnindignation);
                this.columnfearlessness = new global::System.Data.DataColumn("fearlessness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfearlessness);
                this.columndepreciation = new global::System.Data.DataColumn("depreciation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepreciation);
                this.columnexpectation = new global::System.Data.DataColumn("expectation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpectation);
                this.columntenderness = new global::System.Data.DataColumn("tenderness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenderness);
                this.columnmisery = new global::System.Data.DataColumn("misery", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmisery);
                this.columndepression = new global::System.Data.DataColumn("depression", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepression);
                this.columnforgiveness = new global::System.Data.DataColumn("forgiveness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforgiveness);
                this.columnwillies = new global::System.Data.DataColumn("willies", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwillies);
                this.columnfit = new global::System.Data.DataColumn("fit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfit);
                this.columncomfort = new global::System.Data.DataColumn("comfort", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomfort);
                this.columnshame = new global::System.Data.DataColumn("shame", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshame);
                this.columnapprehension = new global::System.Data.DataColumn("apprehension", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprehension);
                this.columndelight = new global::System.Data.DataColumn("delight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelight);
                this.columnjealousy = new global::System.Data.DataColumn("jealousy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjealousy);
                this.columnaggravation = new global::System.Data.DataColumn("aggravation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaggravation);
                this.columnchill = new global::System.Data.DataColumn("chill", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchill);
                this.columnwarpath = new global::System.Data.DataColumn("warpath", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwarpath);
                this.columnserene = new global::System.Data.DataColumn("serene", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserene);
                this.columnexuberance = new global::System.Data.DataColumn("exuberance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexuberance);
                this.columnresignation = new global::System.Data.DataColumn("resignation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresignation);
                this.columngratitude = new global::System.Data.DataColumn("gratitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngratitude);
                this.columndespondency = new global::System.Data.DataColumn("despondency", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndespondency);
                this.columnnirvana = new global::System.Data.DataColumn("nirvana", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnirvana);
                this.columnlividity = new global::System.Data.DataColumn("lividity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlividity);
                this.columnemotion = new global::System.Data.DataColumn("emotion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemotion);
                this.columndisappointment = new global::System.Data.DataColumn("disappointment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisappointment);
                this.columnhorror = new global::System.Data.DataColumn("horror", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhorror);
                this.columngrief = new global::System.Data.DataColumn("grief", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrief);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columndistress = new global::System.Data.DataColumn("distress", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistress);
                this.columnintoxication = new global::System.Data.DataColumn("intoxication", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintoxication);
                this.columnirritation = new global::System.Data.DataColumn("irritation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnirritation);
                this.columninsecurity = new global::System.Data.DataColumn("insecurity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsecurity);
                this.columnpride = new global::System.Data.DataColumn("pride", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpride);
                this.columnfever = new global::System.Data.DataColumn("fever", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfever);
                this.columnrejoicing = new global::System.Data.DataColumn("rejoicing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrejoicing);
                this.columnimpatience = new global::System.Data.DataColumn("impatience", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpatience);
                this.columnpoliteness = new global::System.Data.DataColumn("politeness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoliteness);
                this.columntranquillity = new global::System.Data.DataColumn("tranquillity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntranquillity);
                this.columnhilarity = new global::System.Data.DataColumn("hilarity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhilarity);
                this.columnfury = new global::System.Data.DataColumn("fury", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfury);
                this.columngladness = new global::System.Data.DataColumn("gladness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngladness);
                this.columnthing = new global::System.Data.DataColumn("thing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthing);
                this.columnnausea = new global::System.Data.DataColumn("nausea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnausea);
                this.columncalmness = new global::System.Data.DataColumn("calmness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalmness);
                this.columnfulfillment = new global::System.Data.DataColumn("fulfillment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfulfillment);
                this.columnecstasy = new global::System.Data.DataColumn("ecstasy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnecstasy);
                this.columnelation = new global::System.Data.DataColumn("elation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelation);
                this.columnplayfulness = new global::System.Data.DataColumn("playfulness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayfulness);
                this.columnexhilaration = new global::System.Data.DataColumn("exhilaration", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexhilaration);
                this.columntitillation = new global::System.Data.DataColumn("titillation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitillation);
                this.columngratefulness = new global::System.Data.DataColumn("gratefulness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngratefulness);
                this.columndiffidence = new global::System.Data.DataColumn("diffidence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffidence);
                this.columnradiance = new global::System.Data.DataColumn("radiance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnradiance);
                this.columnsorrow = new global::System.Data.DataColumn("sorrow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsorrow);
                this.columnconfidence = new global::System.Data.DataColumn("confidence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfidence);
                this.columnsecurity = new global::System.Data.DataColumn("security", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsecurity);
                this.columnego = new global::System.Data.DataColumn("ego", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnego);
                this.columnhostility = new global::System.Data.DataColumn("hostility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhostility);
                this.columnfrustration = new global::System.Data.DataColumn("frustration", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrustration);
                this.columnattrition = new global::System.Data.DataColumn("attrition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattrition);
                this.columnangst = new global::System.Data.DataColumn("angst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnangst);
                this.columnshock = new global::System.Data.DataColumn("shock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshock);
                this.columnpreference = new global::System.Data.DataColumn("preference", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreference);
                this.columnenthusiasm = new global::System.Data.DataColumn("enthusiasm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenthusiasm);
                this.columnisolation = new global::System.Data.DataColumn("isolation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisolation);
                this.columnconscience = new global::System.Data.DataColumn("conscience", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconscience);
                this.columnscruple = new global::System.Data.DataColumn("scruple", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscruple);
                this.columnworry = new global::System.Data.DataColumn("worry", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworry);
                this.columnearnestness = new global::System.Data.DataColumn("earnestness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnearnestness);
                this.columnmalevolence = new global::System.Data.DataColumn("malevolence", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmalevolence);
                this.columnawe = new global::System.Data.DataColumn("awe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawe);
                this.columnguilt = new global::System.Data.DataColumn("guilt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguilt);
                this.columnidentification = new global::System.Data.DataColumn("identification", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidentification);
                this.columnword.AllowDBNull = false;
                this.columnword.MaxLength = 255;
                this.columnjoy.AllowDBNull = false;
                this.columnsurprise.AllowDBNull = false;
                this.columntrust.AllowDBNull = false;
                this.columnanticipation.AllowDBNull = false;
                this.columnfear.AllowDBNull = false;
                this.columnanger.AllowDBNull = false;
                this.columnsadness.AllowDBNull = false;
                this.columndisgust.AllowDBNull = false;
                this.columnhappiness.AllowDBNull = false;
                this.columnlevity.AllowDBNull = false;
                this.columnhate.AllowDBNull = false;
                this.columnloyalty.AllowDBNull = false;
                this.columnmelancholy.AllowDBNull = false;
                this.columnanxiety.AllowDBNull = false;
                this.columnembarrassment.AllowDBNull = false;
                this.columnregard.AllowDBNull = false;
                this.columnstress.AllowDBNull = false;
                this.columngusto.AllowDBNull = false;
                this.columncompunction.AllowDBNull = false;
                this.columncynicism.AllowDBNull = false;
                this.columnsituation.AllowDBNull = false;
                this.columnumbrage.AllowDBNull = false;
                this.columnfavor.AllowDBNull = false;
                this.columnmeekness.AllowDBNull = false;
                this.columncompassion.AllowDBNull = false;
                this.columnwithdrawal.AllowDBNull = false;
                this.columnscare.AllowDBNull = false;
                this.columnunrest.AllowDBNull = false;
                this.columncalm.AllowDBNull = false;
                this.columncourage.AllowDBNull = false;
                this.columndespair.AllowDBNull = false;
                this.columnfidget.AllowDBNull = false;
                this.columnshyness.AllowDBNull = false;
                this.columnapathy.AllowDBNull = false;
                this.columnhysteria.AllowDBNull = false;
                this.columnshadow.AllowDBNull = false;
                this.columnresentment.AllowDBNull = false;
                this.columnoptimism.AllowDBNull = false;
                this.columnheartstrings.AllowDBNull = false;
                this.columnbonheur.AllowDBNull = false;
                this.columndudgeon.AllowDBNull = false;
                this.columnmerriment.AllowDBNull = false;
                this.columnhope.AllowDBNull = false;
                this.columnforeboding.AllowDBNull = false;
                this.columnenvy.AllowDBNull = false;
                this.columninterest.AllowDBNull = false;
                this.columnrelaxed.AllowDBNull = false;
                this.columncruelty.AllowDBNull = false;
                this.columnhelplessness.AllowDBNull = false;
                this.columnsolicitude.AllowDBNull = false;
                this.columnsatisfaction.AllowDBNull = false;
                this.columnsuspense.AllowDBNull = false;
                this.columnfondness.AllowDBNull = false;
                this.columndolor.AllowDBNull = false;
                this.columnweakness.AllowDBNull = false;
                this.columnelectricity.AllowDBNull = false;
                this.columnesteem.AllowDBNull = false;
                this.columnwoe.AllowDBNull = false;
                this.columnrelieved.AllowDBNull = false;
                this.columnwonder.AllowDBNull = false;
                this.columnattachment.AllowDBNull = false;
                this.columnpessimism.AllowDBNull = false;
                this.columnmalice.AllowDBNull = false;
                this.columnlove.AllowDBNull = false;
                this.columncompatibility.AllowDBNull = false;
                this.columntimidity.AllowDBNull = false;
                this.columnblessedness.AllowDBNull = false;
                this.columnexultation.AllowDBNull = false;
                this.columntumult.AllowDBNull = false;
                this.columnalienation.AllowDBNull = false;
                this.columnhumility.AllowDBNull = false;
                this.columnpowerlessness.AllowDBNull = false;
                this.columncomplacency.AllowDBNull = false;
                this.columngloom.AllowDBNull = false;
                this.columnaggression.AllowDBNull = false;
                this.columnsensation.AllowDBNull = false;
                this.columnantipathy.AllowDBNull = false;
                this.columngloat.AllowDBNull = false;
                this.columndoubt.AllowDBNull = false;
                this.columnempathy.AllowDBNull = false;
                this.columnconsciousness.AllowDBNull = false;
                this.columningratitude.AllowDBNull = false;
                this.columnhopelessness.AllowDBNull = false;
                this.columnsignal.AllowDBNull = false;
                this.columnalarm.AllowDBNull = false;
                this.columndislike.AllowDBNull = false;
                this.columnstir.AllowDBNull = false;
                this.columndistance.AllowDBNull = false;
                this.columnsmugness.AllowDBNull = false;
                this.columnrepentance.AllowDBNull = false;
                this.columneasiness.AllowDBNull = false;
                this.columnfriendliness.AllowDBNull = false;
                this.columngravity.AllowDBNull = false;
                this.columndispleasure.AllowDBNull = false;
                this.columndiscouragement.AllowDBNull = false;
                this.columnpique.AllowDBNull = false;
                this.columnbenevolence.AllowDBNull = false;
                this.columnchagrin.AllowDBNull = false;
                this.columntension.AllowDBNull = false;
                this.columntogetherness.AllowDBNull = false;
                this.columnpanic.AllowDBNull = false;
                this.columneagerness.AllowDBNull = false;
                this.columnpleasure.AllowDBNull = false;
                this.columnexcitement.AllowDBNull = false;
                this.columnmood.AllowDBNull = false;
                this.columnanimosity.AllowDBNull = false;
                this.columndefeatism.AllowDBNull = false;
                this.columnworship.AllowDBNull = false;
                this.columnrepugnance.AllowDBNull = false;
                this.columngrudge.AllowDBNull = false;
                this.columneuphoria.AllowDBNull = false;
                this.columnantagonism.AllowDBNull = false;
                this.columntrait.AllowDBNull = false;
                this.columnbrotherhood.AllowDBNull = false;
                this.columnstewing.AllowDBNull = false;
                this.columnpity.AllowDBNull = false;
                this.columndaze.AllowDBNull = false;
                this.columnsympathy.AllowDBNull = false;
                this.columnannoyance.AllowDBNull = false;
                this.columnencouragement.AllowDBNull = false;
                this.columnbuoyancy.AllowDBNull = false;
                this.columndevotion.AllowDBNull = false;
                this.columntriumph.AllowDBNull = false;
                this.columncontempt.AllowDBNull = false;
                this.columnbelonging.AllowDBNull = false;
                this.columnsinking.AllowDBNull = false;
                this.columnunhappiness.AllowDBNull = false;
                this.columntrepidation.AllowDBNull = false;
                this.columnadmiration.AllowDBNull = false;
                this.columndisapproval.AllowDBNull = false;
                this.columnindifference.AllowDBNull = false;
                this.columnaffection.AllowDBNull = false;
                this.columnastonishment.AllowDBNull = false;
                this.columnoppression.AllowDBNull = false;
                this.columnlanguor.AllowDBNull = false;
                this.columncoolness.AllowDBNull = false;
                this.columnliking.AllowDBNull = false;
                this.columnbehaviour.AllowDBNull = false;
                this.columnpeace.AllowDBNull = false;
                this.columnmisogyny.AllowDBNull = false;
                this.columnbang.AllowDBNull = false;
                this.columncheerfulness.AllowDBNull = false;
                this.columncreeps.AllowDBNull = false;
                this.columnagitation.AllowDBNull = false;
                this.columnboredom.AllowDBNull = false;
                this.columngratification.AllowDBNull = false;
                this.columnhurt.AllowDBNull = false;
                this.columnagape.AllowDBNull = false;
                this.columnconcern.AllowDBNull = false;
                this.columnardor.AllowDBNull = false;
                this.columnmourning.AllowDBNull = false;
                this.columnharassment.AllowDBNull = false;
                this.columncontentment.AllowDBNull = false;
                this.columncloseness.AllowDBNull = false;
                this.columnsurprised.AllowDBNull = false;
                this.columnconfusion.AllowDBNull = false;
                this.columnpresage.AllowDBNull = false;
                this.columnapproval.AllowDBNull = false;
                this.columnstate.AllowDBNull = false;
                this.columnwrath.AllowDBNull = false;
                this.columndander.AllowDBNull = false;
                this.columnreverence.AllowDBNull = false;
                this.columncontent.AllowDBNull = false;
                this.columnamusement.AllowDBNull = false;
                this.columnindignation.AllowDBNull = false;
                this.columnfearlessness.AllowDBNull = false;
                this.columndepreciation.AllowDBNull = false;
                this.columnexpectation.AllowDBNull = false;
                this.columntenderness.AllowDBNull = false;
                this.columnmisery.AllowDBNull = false;
                this.columndepression.AllowDBNull = false;
                this.columnforgiveness.AllowDBNull = false;
                this.columnwillies.AllowDBNull = false;
                this.columnfit.AllowDBNull = false;
                this.columncomfort.AllowDBNull = false;
                this.columnshame.AllowDBNull = false;
                this.columnapprehension.AllowDBNull = false;
                this.columndelight.AllowDBNull = false;
                this.columnjealousy.AllowDBNull = false;
                this.columnaggravation.AllowDBNull = false;
                this.columnchill.AllowDBNull = false;
                this.columnwarpath.AllowDBNull = false;
                this.columnserene.AllowDBNull = false;
                this.columnexuberance.AllowDBNull = false;
                this.columnresignation.AllowDBNull = false;
                this.columngratitude.AllowDBNull = false;
                this.columndespondency.AllowDBNull = false;
                this.columnnirvana.AllowDBNull = false;
                this.columnlividity.AllowDBNull = false;
                this.columnemotion.AllowDBNull = false;
                this.columndisappointment.AllowDBNull = false;
                this.columnhorror.AllowDBNull = false;
                this.columngrief.AllowDBNull = false;
                this.columnweight.AllowDBNull = false;
                this.columndistress.AllowDBNull = false;
                this.columnintoxication.AllowDBNull = false;
                this.columnirritation.AllowDBNull = false;
                this.columninsecurity.AllowDBNull = false;
                this.columnpride.AllowDBNull = false;
                this.columnfever.AllowDBNull = false;
                this.columnrejoicing.AllowDBNull = false;
                this.columnimpatience.AllowDBNull = false;
                this.columnpoliteness.AllowDBNull = false;
                this.columntranquillity.AllowDBNull = false;
                this.columnhilarity.AllowDBNull = false;
                this.columnfury.AllowDBNull = false;
                this.columngladness.AllowDBNull = false;
                this.columnthing.AllowDBNull = false;
                this.columnnausea.AllowDBNull = false;
                this.columncalmness.AllowDBNull = false;
                this.columnfulfillment.AllowDBNull = false;
                this.columnecstasy.AllowDBNull = false;
                this.columnelation.AllowDBNull = false;
                this.columnplayfulness.AllowDBNull = false;
                this.columnexhilaration.AllowDBNull = false;
                this.columntitillation.AllowDBNull = false;
                this.columngratefulness.AllowDBNull = false;
                this.columndiffidence.AllowDBNull = false;
                this.columnradiance.AllowDBNull = false;
                this.columnsorrow.AllowDBNull = false;
                this.columnconfidence.AllowDBNull = false;
                this.columnsecurity.AllowDBNull = false;
                this.columnego.AllowDBNull = false;
                this.columnhostility.AllowDBNull = false;
                this.columnfrustration.AllowDBNull = false;
                this.columnattrition.AllowDBNull = false;
                this.columnangst.AllowDBNull = false;
                this.columnshock.AllowDBNull = false;
                this.columnpreference.AllowDBNull = false;
                this.columnenthusiasm.AllowDBNull = false;
                this.columnisolation.AllowDBNull = false;
                this.columnconscience.AllowDBNull = false;
                this.columnscruple.AllowDBNull = false;
                this.columnworry.AllowDBNull = false;
                this.columnearnestness.AllowDBNull = false;
                this.columnmalevolence.AllowDBNull = false;
                this.columnawe.AllowDBNull = false;
                this.columnguilt.AllowDBNull = false;
                this.columnidentification.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresRow Newword_scoresRow() {
                return ((word_scoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new word_scoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(word_scoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.word_scoresRowChanged != null)) {
                    this.word_scoresRowChanged(this, new word_scoresRowChangeEvent(((word_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.word_scoresRowChanging != null)) {
                    this.word_scoresRowChanging(this, new word_scoresRowChangeEvent(((word_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.word_scoresRowDeleted != null)) {
                    this.word_scoresRowDeleted(this, new word_scoresRowChangeEvent(((word_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.word_scoresRowDeleting != null)) {
                    this.word_scoresRowDeleting(this, new word_scoresRowChangeEvent(((word_scoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removeword_scoresRow(word_scoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _twitter_tweet_tracker_db ds = new _twitter_tweet_tracker_db();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "word_scoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class emoji_scoresRow : global::System.Data.DataRow {
            
            private emoji_scoresDataTable tableemoji_scores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal emoji_scoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemoji_scores = ((emoji_scoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string unicode {
                get {
                    return ((string)(this[this.tableemoji_scores.unicodeColumn]));
                }
                set {
                    this[this.tableemoji_scores.unicodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string emoji {
                get {
                    return ((string)(this[this.tableemoji_scores.emojiColumn]));
                }
                set {
                    this[this.tableemoji_scores.emojiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableemoji_scores.nameColumn]));
                }
                set {
                    this[this.tableemoji_scores.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double anger {
                get {
                    return ((double)(this[this.tableemoji_scores.angerColumn]));
                }
                set {
                    this[this.tableemoji_scores.angerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double anticipation {
                get {
                    return ((double)(this[this.tableemoji_scores.anticipationColumn]));
                }
                set {
                    this[this.tableemoji_scores.anticipationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double disgust {
                get {
                    return ((double)(this[this.tableemoji_scores.disgustColumn]));
                }
                set {
                    this[this.tableemoji_scores.disgustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fear {
                get {
                    return ((double)(this[this.tableemoji_scores.fearColumn]));
                }
                set {
                    this[this.tableemoji_scores.fearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double joy {
                get {
                    return ((double)(this[this.tableemoji_scores.joyColumn]));
                }
                set {
                    this[this.tableemoji_scores.joyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sadness {
                get {
                    return ((double)(this[this.tableemoji_scores.sadnessColumn]));
                }
                set {
                    this[this.tableemoji_scores.sadnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double surprise {
                get {
                    return ((double)(this[this.tableemoji_scores.surpriseColumn]));
                }
                set {
                    this[this.tableemoji_scores.surpriseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double trust {
                get {
                    return ((double)(this[this.tableemoji_scores.trustColumn]));
                }
                set {
                    this[this.tableemoji_scores.trustColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class word_scoresRow : global::System.Data.DataRow {
            
            private word_scoresDataTable tableword_scores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal word_scoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableword_scores = ((word_scoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string word {
                get {
                    return ((string)(this[this.tableword_scores.wordColumn]));
                }
                set {
                    this[this.tableword_scores.wordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double joy {
                get {
                    return ((double)(this[this.tableword_scores.joyColumn]));
                }
                set {
                    this[this.tableword_scores.joyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double surprise {
                get {
                    return ((double)(this[this.tableword_scores.surpriseColumn]));
                }
                set {
                    this[this.tableword_scores.surpriseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double trust {
                get {
                    return ((double)(this[this.tableword_scores.trustColumn]));
                }
                set {
                    this[this.tableword_scores.trustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double anticipation {
                get {
                    return ((double)(this[this.tableword_scores.anticipationColumn]));
                }
                set {
                    this[this.tableword_scores.anticipationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fear {
                get {
                    return ((double)(this[this.tableword_scores.fearColumn]));
                }
                set {
                    this[this.tableword_scores.fearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double anger {
                get {
                    return ((double)(this[this.tableword_scores.angerColumn]));
                }
                set {
                    this[this.tableword_scores.angerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sadness {
                get {
                    return ((double)(this[this.tableword_scores.sadnessColumn]));
                }
                set {
                    this[this.tableword_scores.sadnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double disgust {
                get {
                    return ((double)(this[this.tableword_scores.disgustColumn]));
                }
                set {
                    this[this.tableword_scores.disgustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double happiness {
                get {
                    return ((double)(this[this.tableword_scores.happinessColumn]));
                }
                set {
                    this[this.tableword_scores.happinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double levity {
                get {
                    return ((double)(this[this.tableword_scores.levityColumn]));
                }
                set {
                    this[this.tableword_scores.levityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hate {
                get {
                    return ((double)(this[this.tableword_scores.hateColumn]));
                }
                set {
                    this[this.tableword_scores.hateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double loyalty {
                get {
                    return ((double)(this[this.tableword_scores.loyaltyColumn]));
                }
                set {
                    this[this.tableword_scores.loyaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double melancholy {
                get {
                    return ((double)(this[this.tableword_scores.melancholyColumn]));
                }
                set {
                    this[this.tableword_scores.melancholyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double anxiety {
                get {
                    return ((double)(this[this.tableword_scores.anxietyColumn]));
                }
                set {
                    this[this.tableword_scores.anxietyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double embarrassment {
                get {
                    return ((double)(this[this.tableword_scores.embarrassmentColumn]));
                }
                set {
                    this[this.tableword_scores.embarrassmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double regard {
                get {
                    return ((double)(this[this.tableword_scores.regardColumn]));
                }
                set {
                    this[this.tableword_scores.regardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double stress {
                get {
                    return ((double)(this[this.tableword_scores.stressColumn]));
                }
                set {
                    this[this.tableword_scores.stressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gusto {
                get {
                    return ((double)(this[this.tableword_scores.gustoColumn]));
                }
                set {
                    this[this.tableword_scores.gustoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double compunction {
                get {
                    return ((double)(this[this.tableword_scores.compunctionColumn]));
                }
                set {
                    this[this.tableword_scores.compunctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double cynicism {
                get {
                    return ((double)(this[this.tableword_scores.cynicismColumn]));
                }
                set {
                    this[this.tableword_scores.cynicismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double situation {
                get {
                    return ((double)(this[this.tableword_scores.situationColumn]));
                }
                set {
                    this[this.tableword_scores.situationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double umbrage {
                get {
                    return ((double)(this[this.tableword_scores.umbrageColumn]));
                }
                set {
                    this[this.tableword_scores.umbrageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double favor {
                get {
                    return ((double)(this[this.tableword_scores.favorColumn]));
                }
                set {
                    this[this.tableword_scores.favorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double meekness {
                get {
                    return ((double)(this[this.tableword_scores.meeknessColumn]));
                }
                set {
                    this[this.tableword_scores.meeknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double compassion {
                get {
                    return ((double)(this[this.tableword_scores.compassionColumn]));
                }
                set {
                    this[this.tableword_scores.compassionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double withdrawal {
                get {
                    return ((double)(this[this.tableword_scores.withdrawalColumn]));
                }
                set {
                    this[this.tableword_scores.withdrawalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double scare {
                get {
                    return ((double)(this[this.tableword_scores.scareColumn]));
                }
                set {
                    this[this.tableword_scores.scareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double unrest {
                get {
                    return ((double)(this[this.tableword_scores.unrestColumn]));
                }
                set {
                    this[this.tableword_scores.unrestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double calm {
                get {
                    return ((double)(this[this.tableword_scores.calmColumn]));
                }
                set {
                    this[this.tableword_scores.calmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double courage {
                get {
                    return ((double)(this[this.tableword_scores.courageColumn]));
                }
                set {
                    this[this.tableword_scores.courageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double despair {
                get {
                    return ((double)(this[this.tableword_scores.despairColumn]));
                }
                set {
                    this[this.tableword_scores.despairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fidget {
                get {
                    return ((double)(this[this.tableword_scores.fidgetColumn]));
                }
                set {
                    this[this.tableword_scores.fidgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double shyness {
                get {
                    return ((double)(this[this.tableword_scores.shynessColumn]));
                }
                set {
                    this[this.tableword_scores.shynessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double apathy {
                get {
                    return ((double)(this[this.tableword_scores.apathyColumn]));
                }
                set {
                    this[this.tableword_scores.apathyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hysteria {
                get {
                    return ((double)(this[this.tableword_scores.hysteriaColumn]));
                }
                set {
                    this[this.tableword_scores.hysteriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double shadow {
                get {
                    return ((double)(this[this.tableword_scores.shadowColumn]));
                }
                set {
                    this[this.tableword_scores.shadowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double resentment {
                get {
                    return ((double)(this[this.tableword_scores.resentmentColumn]));
                }
                set {
                    this[this.tableword_scores.resentmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double optimism {
                get {
                    return ((double)(this[this.tableword_scores.optimismColumn]));
                }
                set {
                    this[this.tableword_scores.optimismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double heartstrings {
                get {
                    return ((double)(this[this.tableword_scores.heartstringsColumn]));
                }
                set {
                    this[this.tableword_scores.heartstringsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double bonheur {
                get {
                    return ((double)(this[this.tableword_scores.bonheurColumn]));
                }
                set {
                    this[this.tableword_scores.bonheurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double dudgeon {
                get {
                    return ((double)(this[this.tableword_scores.dudgeonColumn]));
                }
                set {
                    this[this.tableword_scores.dudgeonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double merriment {
                get {
                    return ((double)(this[this.tableword_scores.merrimentColumn]));
                }
                set {
                    this[this.tableword_scores.merrimentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hope {
                get {
                    return ((double)(this[this.tableword_scores.hopeColumn]));
                }
                set {
                    this[this.tableword_scores.hopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double foreboding {
                get {
                    return ((double)(this[this.tableword_scores.forebodingColumn]));
                }
                set {
                    this[this.tableword_scores.forebodingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double envy {
                get {
                    return ((double)(this[this.tableword_scores.envyColumn]));
                }
                set {
                    this[this.tableword_scores.envyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double interest {
                get {
                    return ((double)(this[this.tableword_scores.interestColumn]));
                }
                set {
                    this[this.tableword_scores.interestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double relaxed {
                get {
                    return ((double)(this[this.tableword_scores.relaxedColumn]));
                }
                set {
                    this[this.tableword_scores.relaxedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double cruelty {
                get {
                    return ((double)(this[this.tableword_scores.crueltyColumn]));
                }
                set {
                    this[this.tableword_scores.crueltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double helplessness {
                get {
                    return ((double)(this[this.tableword_scores.helplessnessColumn]));
                }
                set {
                    this[this.tableword_scores.helplessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double solicitude {
                get {
                    return ((double)(this[this.tableword_scores.solicitudeColumn]));
                }
                set {
                    this[this.tableword_scores.solicitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double satisfaction {
                get {
                    return ((double)(this[this.tableword_scores.satisfactionColumn]));
                }
                set {
                    this[this.tableword_scores.satisfactionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double suspense {
                get {
                    return ((double)(this[this.tableword_scores.suspenseColumn]));
                }
                set {
                    this[this.tableword_scores.suspenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fondness {
                get {
                    return ((double)(this[this.tableword_scores.fondnessColumn]));
                }
                set {
                    this[this.tableword_scores.fondnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double dolor {
                get {
                    return ((double)(this[this.tableword_scores.dolorColumn]));
                }
                set {
                    this[this.tableword_scores.dolorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double weakness {
                get {
                    return ((double)(this[this.tableword_scores.weaknessColumn]));
                }
                set {
                    this[this.tableword_scores.weaknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double electricity {
                get {
                    return ((double)(this[this.tableword_scores.electricityColumn]));
                }
                set {
                    this[this.tableword_scores.electricityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double esteem {
                get {
                    return ((double)(this[this.tableword_scores.esteemColumn]));
                }
                set {
                    this[this.tableword_scores.esteemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double woe {
                get {
                    return ((double)(this[this.tableword_scores.woeColumn]));
                }
                set {
                    this[this.tableword_scores.woeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double relieved {
                get {
                    return ((double)(this[this.tableword_scores.relievedColumn]));
                }
                set {
                    this[this.tableword_scores.relievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double wonder {
                get {
                    return ((double)(this[this.tableword_scores.wonderColumn]));
                }
                set {
                    this[this.tableword_scores.wonderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double attachment {
                get {
                    return ((double)(this[this.tableword_scores.attachmentColumn]));
                }
                set {
                    this[this.tableword_scores.attachmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double pessimism {
                get {
                    return ((double)(this[this.tableword_scores.pessimismColumn]));
                }
                set {
                    this[this.tableword_scores.pessimismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double malice {
                get {
                    return ((double)(this[this.tableword_scores.maliceColumn]));
                }
                set {
                    this[this.tableword_scores.maliceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double love {
                get {
                    return ((double)(this[this.tableword_scores.loveColumn]));
                }
                set {
                    this[this.tableword_scores.loveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double compatibility {
                get {
                    return ((double)(this[this.tableword_scores.compatibilityColumn]));
                }
                set {
                    this[this.tableword_scores.compatibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double timidity {
                get {
                    return ((double)(this[this.tableword_scores.timidityColumn]));
                }
                set {
                    this[this.tableword_scores.timidityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double blessedness {
                get {
                    return ((double)(this[this.tableword_scores.blessednessColumn]));
                }
                set {
                    this[this.tableword_scores.blessednessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double exultation {
                get {
                    return ((double)(this[this.tableword_scores.exultationColumn]));
                }
                set {
                    this[this.tableword_scores.exultationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double tumult {
                get {
                    return ((double)(this[this.tableword_scores.tumultColumn]));
                }
                set {
                    this[this.tableword_scores.tumultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double alienation {
                get {
                    return ((double)(this[this.tableword_scores.alienationColumn]));
                }
                set {
                    this[this.tableword_scores.alienationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double humility {
                get {
                    return ((double)(this[this.tableword_scores.humilityColumn]));
                }
                set {
                    this[this.tableword_scores.humilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double powerlessness {
                get {
                    return ((double)(this[this.tableword_scores.powerlessnessColumn]));
                }
                set {
                    this[this.tableword_scores.powerlessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double complacency {
                get {
                    return ((double)(this[this.tableword_scores.complacencyColumn]));
                }
                set {
                    this[this.tableword_scores.complacencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gloom {
                get {
                    return ((double)(this[this.tableword_scores.gloomColumn]));
                }
                set {
                    this[this.tableword_scores.gloomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double aggression {
                get {
                    return ((double)(this[this.tableword_scores.aggressionColumn]));
                }
                set {
                    this[this.tableword_scores.aggressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sensation {
                get {
                    return ((double)(this[this.tableword_scores.sensationColumn]));
                }
                set {
                    this[this.tableword_scores.sensationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double antipathy {
                get {
                    return ((double)(this[this.tableword_scores.antipathyColumn]));
                }
                set {
                    this[this.tableword_scores.antipathyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gloat {
                get {
                    return ((double)(this[this.tableword_scores.gloatColumn]));
                }
                set {
                    this[this.tableword_scores.gloatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double doubt {
                get {
                    return ((double)(this[this.tableword_scores.doubtColumn]));
                }
                set {
                    this[this.tableword_scores.doubtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double empathy {
                get {
                    return ((double)(this[this.tableword_scores.empathyColumn]));
                }
                set {
                    this[this.tableword_scores.empathyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double consciousness {
                get {
                    return ((double)(this[this.tableword_scores.consciousnessColumn]));
                }
                set {
                    this[this.tableword_scores.consciousnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ingratitude {
                get {
                    return ((double)(this[this.tableword_scores.ingratitudeColumn]));
                }
                set {
                    this[this.tableword_scores.ingratitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hopelessness {
                get {
                    return ((double)(this[this.tableword_scores.hopelessnessColumn]));
                }
                set {
                    this[this.tableword_scores.hopelessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double signal {
                get {
                    return ((double)(this[this.tableword_scores.signalColumn]));
                }
                set {
                    this[this.tableword_scores.signalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double alarm {
                get {
                    return ((double)(this[this.tableword_scores.alarmColumn]));
                }
                set {
                    this[this.tableword_scores.alarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double dislike {
                get {
                    return ((double)(this[this.tableword_scores.dislikeColumn]));
                }
                set {
                    this[this.tableword_scores.dislikeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double stir {
                get {
                    return ((double)(this[this.tableword_scores.stirColumn]));
                }
                set {
                    this[this.tableword_scores.stirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double distance {
                get {
                    return ((double)(this[this.tableword_scores.distanceColumn]));
                }
                set {
                    this[this.tableword_scores.distanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double smugness {
                get {
                    return ((double)(this[this.tableword_scores.smugnessColumn]));
                }
                set {
                    this[this.tableword_scores.smugnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double repentance {
                get {
                    return ((double)(this[this.tableword_scores.repentanceColumn]));
                }
                set {
                    this[this.tableword_scores.repentanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double easiness {
                get {
                    return ((double)(this[this.tableword_scores.easinessColumn]));
                }
                set {
                    this[this.tableword_scores.easinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double friendliness {
                get {
                    return ((double)(this[this.tableword_scores.friendlinessColumn]));
                }
                set {
                    this[this.tableword_scores.friendlinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gravity {
                get {
                    return ((double)(this[this.tableword_scores.gravityColumn]));
                }
                set {
                    this[this.tableword_scores.gravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double displeasure {
                get {
                    return ((double)(this[this.tableword_scores.displeasureColumn]));
                }
                set {
                    this[this.tableword_scores.displeasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double discouragement {
                get {
                    return ((double)(this[this.tableword_scores.discouragementColumn]));
                }
                set {
                    this[this.tableword_scores.discouragementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double pique {
                get {
                    return ((double)(this[this.tableword_scores.piqueColumn]));
                }
                set {
                    this[this.tableword_scores.piqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double benevolence {
                get {
                    return ((double)(this[this.tableword_scores.benevolenceColumn]));
                }
                set {
                    this[this.tableword_scores.benevolenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double chagrin {
                get {
                    return ((double)(this[this.tableword_scores.chagrinColumn]));
                }
                set {
                    this[this.tableword_scores.chagrinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double tension {
                get {
                    return ((double)(this[this.tableword_scores.tensionColumn]));
                }
                set {
                    this[this.tableword_scores.tensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double togetherness {
                get {
                    return ((double)(this[this.tableword_scores.togethernessColumn]));
                }
                set {
                    this[this.tableword_scores.togethernessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double panic {
                get {
                    return ((double)(this[this.tableword_scores.panicColumn]));
                }
                set {
                    this[this.tableword_scores.panicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double eagerness {
                get {
                    return ((double)(this[this.tableword_scores.eagernessColumn]));
                }
                set {
                    this[this.tableword_scores.eagernessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double pleasure {
                get {
                    return ((double)(this[this.tableword_scores.pleasureColumn]));
                }
                set {
                    this[this.tableword_scores.pleasureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double excitement {
                get {
                    return ((double)(this[this.tableword_scores.excitementColumn]));
                }
                set {
                    this[this.tableword_scores.excitementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double mood {
                get {
                    return ((double)(this[this.tableword_scores.moodColumn]));
                }
                set {
                    this[this.tableword_scores.moodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double animosity {
                get {
                    return ((double)(this[this.tableword_scores.animosityColumn]));
                }
                set {
                    this[this.tableword_scores.animosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double defeatism {
                get {
                    return ((double)(this[this.tableword_scores.defeatismColumn]));
                }
                set {
                    this[this.tableword_scores.defeatismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double worship {
                get {
                    return ((double)(this[this.tableword_scores.worshipColumn]));
                }
                set {
                    this[this.tableword_scores.worshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double repugnance {
                get {
                    return ((double)(this[this.tableword_scores.repugnanceColumn]));
                }
                set {
                    this[this.tableword_scores.repugnanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double grudge {
                get {
                    return ((double)(this[this.tableword_scores.grudgeColumn]));
                }
                set {
                    this[this.tableword_scores.grudgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double euphoria {
                get {
                    return ((double)(this[this.tableword_scores.euphoriaColumn]));
                }
                set {
                    this[this.tableword_scores.euphoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double antagonism {
                get {
                    return ((double)(this[this.tableword_scores.antagonismColumn]));
                }
                set {
                    this[this.tableword_scores.antagonismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double trait {
                get {
                    return ((double)(this[this.tableword_scores.traitColumn]));
                }
                set {
                    this[this.tableword_scores.traitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double brotherhood {
                get {
                    return ((double)(this[this.tableword_scores.brotherhoodColumn]));
                }
                set {
                    this[this.tableword_scores.brotherhoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double stewing {
                get {
                    return ((double)(this[this.tableword_scores.stewingColumn]));
                }
                set {
                    this[this.tableword_scores.stewingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double pity {
                get {
                    return ((double)(this[this.tableword_scores.pityColumn]));
                }
                set {
                    this[this.tableword_scores.pityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double daze {
                get {
                    return ((double)(this[this.tableword_scores.dazeColumn]));
                }
                set {
                    this[this.tableword_scores.dazeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sympathy {
                get {
                    return ((double)(this[this.tableword_scores.sympathyColumn]));
                }
                set {
                    this[this.tableword_scores.sympathyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double annoyance {
                get {
                    return ((double)(this[this.tableword_scores.annoyanceColumn]));
                }
                set {
                    this[this.tableword_scores.annoyanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double encouragement {
                get {
                    return ((double)(this[this.tableword_scores.encouragementColumn]));
                }
                set {
                    this[this.tableword_scores.encouragementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double buoyancy {
                get {
                    return ((double)(this[this.tableword_scores.buoyancyColumn]));
                }
                set {
                    this[this.tableword_scores.buoyancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double devotion {
                get {
                    return ((double)(this[this.tableword_scores.devotionColumn]));
                }
                set {
                    this[this.tableword_scores.devotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double triumph {
                get {
                    return ((double)(this[this.tableword_scores.triumphColumn]));
                }
                set {
                    this[this.tableword_scores.triumphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double contempt {
                get {
                    return ((double)(this[this.tableword_scores.contemptColumn]));
                }
                set {
                    this[this.tableword_scores.contemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double belonging {
                get {
                    return ((double)(this[this.tableword_scores.belongingColumn]));
                }
                set {
                    this[this.tableword_scores.belongingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sinking {
                get {
                    return ((double)(this[this.tableword_scores.sinkingColumn]));
                }
                set {
                    this[this.tableword_scores.sinkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double unhappiness {
                get {
                    return ((double)(this[this.tableword_scores.unhappinessColumn]));
                }
                set {
                    this[this.tableword_scores.unhappinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double trepidation {
                get {
                    return ((double)(this[this.tableword_scores.trepidationColumn]));
                }
                set {
                    this[this.tableword_scores.trepidationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double admiration {
                get {
                    return ((double)(this[this.tableword_scores.admirationColumn]));
                }
                set {
                    this[this.tableword_scores.admirationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double disapproval {
                get {
                    return ((double)(this[this.tableword_scores.disapprovalColumn]));
                }
                set {
                    this[this.tableword_scores.disapprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double indifference {
                get {
                    return ((double)(this[this.tableword_scores.indifferenceColumn]));
                }
                set {
                    this[this.tableword_scores.indifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double affection {
                get {
                    return ((double)(this[this.tableword_scores.affectionColumn]));
                }
                set {
                    this[this.tableword_scores.affectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double astonishment {
                get {
                    return ((double)(this[this.tableword_scores.astonishmentColumn]));
                }
                set {
                    this[this.tableword_scores.astonishmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double oppression {
                get {
                    return ((double)(this[this.tableword_scores.oppressionColumn]));
                }
                set {
                    this[this.tableword_scores.oppressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double languor {
                get {
                    return ((double)(this[this.tableword_scores.languorColumn]));
                }
                set {
                    this[this.tableword_scores.languorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double coolness {
                get {
                    return ((double)(this[this.tableword_scores.coolnessColumn]));
                }
                set {
                    this[this.tableword_scores.coolnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double liking {
                get {
                    return ((double)(this[this.tableword_scores.likingColumn]));
                }
                set {
                    this[this.tableword_scores.likingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double behaviour {
                get {
                    return ((double)(this[this.tableword_scores.behaviourColumn]));
                }
                set {
                    this[this.tableword_scores.behaviourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double peace {
                get {
                    return ((double)(this[this.tableword_scores.peaceColumn]));
                }
                set {
                    this[this.tableword_scores.peaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double misogyny {
                get {
                    return ((double)(this[this.tableword_scores.misogynyColumn]));
                }
                set {
                    this[this.tableword_scores.misogynyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double bang {
                get {
                    return ((double)(this[this.tableword_scores.bangColumn]));
                }
                set {
                    this[this.tableword_scores.bangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double cheerfulness {
                get {
                    return ((double)(this[this.tableword_scores.cheerfulnessColumn]));
                }
                set {
                    this[this.tableword_scores.cheerfulnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double creeps {
                get {
                    return ((double)(this[this.tableword_scores.creepsColumn]));
                }
                set {
                    this[this.tableword_scores.creepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double agitation {
                get {
                    return ((double)(this[this.tableword_scores.agitationColumn]));
                }
                set {
                    this[this.tableword_scores.agitationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double boredom {
                get {
                    return ((double)(this[this.tableword_scores.boredomColumn]));
                }
                set {
                    this[this.tableword_scores.boredomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gratification {
                get {
                    return ((double)(this[this.tableword_scores.gratificationColumn]));
                }
                set {
                    this[this.tableword_scores.gratificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hurt {
                get {
                    return ((double)(this[this.tableword_scores.hurtColumn]));
                }
                set {
                    this[this.tableword_scores.hurtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double agape {
                get {
                    return ((double)(this[this.tableword_scores.agapeColumn]));
                }
                set {
                    this[this.tableword_scores.agapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double concern {
                get {
                    return ((double)(this[this.tableword_scores.concernColumn]));
                }
                set {
                    this[this.tableword_scores.concernColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ardor {
                get {
                    return ((double)(this[this.tableword_scores.ardorColumn]));
                }
                set {
                    this[this.tableword_scores.ardorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double mourning {
                get {
                    return ((double)(this[this.tableword_scores.mourningColumn]));
                }
                set {
                    this[this.tableword_scores.mourningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double harassment {
                get {
                    return ((double)(this[this.tableword_scores.harassmentColumn]));
                }
                set {
                    this[this.tableword_scores.harassmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double contentment {
                get {
                    return ((double)(this[this.tableword_scores.contentmentColumn]));
                }
                set {
                    this[this.tableword_scores.contentmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double closeness {
                get {
                    return ((double)(this[this.tableword_scores.closenessColumn]));
                }
                set {
                    this[this.tableword_scores.closenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double surprised {
                get {
                    return ((double)(this[this.tableword_scores.surprisedColumn]));
                }
                set {
                    this[this.tableword_scores.surprisedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double confusion {
                get {
                    return ((double)(this[this.tableword_scores.confusionColumn]));
                }
                set {
                    this[this.tableword_scores.confusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double presage {
                get {
                    return ((double)(this[this.tableword_scores.presageColumn]));
                }
                set {
                    this[this.tableword_scores.presageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double approval {
                get {
                    return ((double)(this[this.tableword_scores.approvalColumn]));
                }
                set {
                    this[this.tableword_scores.approvalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double state {
                get {
                    return ((double)(this[this.tableword_scores.stateColumn]));
                }
                set {
                    this[this.tableword_scores.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double wrath {
                get {
                    return ((double)(this[this.tableword_scores.wrathColumn]));
                }
                set {
                    this[this.tableword_scores.wrathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double dander {
                get {
                    return ((double)(this[this.tableword_scores.danderColumn]));
                }
                set {
                    this[this.tableword_scores.danderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double reverence {
                get {
                    return ((double)(this[this.tableword_scores.reverenceColumn]));
                }
                set {
                    this[this.tableword_scores.reverenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double content {
                get {
                    return ((double)(this[this.tableword_scores.contentColumn]));
                }
                set {
                    this[this.tableword_scores.contentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double amusement {
                get {
                    return ((double)(this[this.tableword_scores.amusementColumn]));
                }
                set {
                    this[this.tableword_scores.amusementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double indignation {
                get {
                    return ((double)(this[this.tableword_scores.indignationColumn]));
                }
                set {
                    this[this.tableword_scores.indignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fearlessness {
                get {
                    return ((double)(this[this.tableword_scores.fearlessnessColumn]));
                }
                set {
                    this[this.tableword_scores.fearlessnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double depreciation {
                get {
                    return ((double)(this[this.tableword_scores.depreciationColumn]));
                }
                set {
                    this[this.tableword_scores.depreciationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double expectation {
                get {
                    return ((double)(this[this.tableword_scores.expectationColumn]));
                }
                set {
                    this[this.tableword_scores.expectationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double tenderness {
                get {
                    return ((double)(this[this.tableword_scores.tendernessColumn]));
                }
                set {
                    this[this.tableword_scores.tendernessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double misery {
                get {
                    return ((double)(this[this.tableword_scores.miseryColumn]));
                }
                set {
                    this[this.tableword_scores.miseryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double depression {
                get {
                    return ((double)(this[this.tableword_scores.depressionColumn]));
                }
                set {
                    this[this.tableword_scores.depressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double forgiveness {
                get {
                    return ((double)(this[this.tableword_scores.forgivenessColumn]));
                }
                set {
                    this[this.tableword_scores.forgivenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double willies {
                get {
                    return ((double)(this[this.tableword_scores.williesColumn]));
                }
                set {
                    this[this.tableword_scores.williesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fit {
                get {
                    return ((double)(this[this.tableword_scores.fitColumn]));
                }
                set {
                    this[this.tableword_scores.fitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double comfort {
                get {
                    return ((double)(this[this.tableword_scores.comfortColumn]));
                }
                set {
                    this[this.tableword_scores.comfortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double shame {
                get {
                    return ((double)(this[this.tableword_scores.shameColumn]));
                }
                set {
                    this[this.tableword_scores.shameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double apprehension {
                get {
                    return ((double)(this[this.tableword_scores.apprehensionColumn]));
                }
                set {
                    this[this.tableword_scores.apprehensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double delight {
                get {
                    return ((double)(this[this.tableword_scores.delightColumn]));
                }
                set {
                    this[this.tableword_scores.delightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double jealousy {
                get {
                    return ((double)(this[this.tableword_scores.jealousyColumn]));
                }
                set {
                    this[this.tableword_scores.jealousyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double aggravation {
                get {
                    return ((double)(this[this.tableword_scores.aggravationColumn]));
                }
                set {
                    this[this.tableword_scores.aggravationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double chill {
                get {
                    return ((double)(this[this.tableword_scores.chillColumn]));
                }
                set {
                    this[this.tableword_scores.chillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double warpath {
                get {
                    return ((double)(this[this.tableword_scores.warpathColumn]));
                }
                set {
                    this[this.tableword_scores.warpathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double serene {
                get {
                    return ((double)(this[this.tableword_scores.sereneColumn]));
                }
                set {
                    this[this.tableword_scores.sereneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double exuberance {
                get {
                    return ((double)(this[this.tableword_scores.exuberanceColumn]));
                }
                set {
                    this[this.tableword_scores.exuberanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double resignation {
                get {
                    return ((double)(this[this.tableword_scores.resignationColumn]));
                }
                set {
                    this[this.tableword_scores.resignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gratitude {
                get {
                    return ((double)(this[this.tableword_scores.gratitudeColumn]));
                }
                set {
                    this[this.tableword_scores.gratitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double despondency {
                get {
                    return ((double)(this[this.tableword_scores.despondencyColumn]));
                }
                set {
                    this[this.tableword_scores.despondencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double nirvana {
                get {
                    return ((double)(this[this.tableword_scores.nirvanaColumn]));
                }
                set {
                    this[this.tableword_scores.nirvanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double lividity {
                get {
                    return ((double)(this[this.tableword_scores.lividityColumn]));
                }
                set {
                    this[this.tableword_scores.lividityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double emotion {
                get {
                    return ((double)(this[this.tableword_scores.emotionColumn]));
                }
                set {
                    this[this.tableword_scores.emotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double disappointment {
                get {
                    return ((double)(this[this.tableword_scores.disappointmentColumn]));
                }
                set {
                    this[this.tableword_scores.disappointmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double horror {
                get {
                    return ((double)(this[this.tableword_scores.horrorColumn]));
                }
                set {
                    this[this.tableword_scores.horrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double grief {
                get {
                    return ((double)(this[this.tableword_scores.griefColumn]));
                }
                set {
                    this[this.tableword_scores.griefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double weight {
                get {
                    return ((double)(this[this.tableword_scores.weightColumn]));
                }
                set {
                    this[this.tableword_scores.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double distress {
                get {
                    return ((double)(this[this.tableword_scores.distressColumn]));
                }
                set {
                    this[this.tableword_scores.distressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double intoxication {
                get {
                    return ((double)(this[this.tableword_scores.intoxicationColumn]));
                }
                set {
                    this[this.tableword_scores.intoxicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double irritation {
                get {
                    return ((double)(this[this.tableword_scores.irritationColumn]));
                }
                set {
                    this[this.tableword_scores.irritationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double insecurity {
                get {
                    return ((double)(this[this.tableword_scores.insecurityColumn]));
                }
                set {
                    this[this.tableword_scores.insecurityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double pride {
                get {
                    return ((double)(this[this.tableword_scores.prideColumn]));
                }
                set {
                    this[this.tableword_scores.prideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fever {
                get {
                    return ((double)(this[this.tableword_scores.feverColumn]));
                }
                set {
                    this[this.tableword_scores.feverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double rejoicing {
                get {
                    return ((double)(this[this.tableword_scores.rejoicingColumn]));
                }
                set {
                    this[this.tableword_scores.rejoicingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double impatience {
                get {
                    return ((double)(this[this.tableword_scores.impatienceColumn]));
                }
                set {
                    this[this.tableword_scores.impatienceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double politeness {
                get {
                    return ((double)(this[this.tableword_scores.politenessColumn]));
                }
                set {
                    this[this.tableword_scores.politenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double tranquillity {
                get {
                    return ((double)(this[this.tableword_scores.tranquillityColumn]));
                }
                set {
                    this[this.tableword_scores.tranquillityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hilarity {
                get {
                    return ((double)(this[this.tableword_scores.hilarityColumn]));
                }
                set {
                    this[this.tableword_scores.hilarityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fury {
                get {
                    return ((double)(this[this.tableword_scores.furyColumn]));
                }
                set {
                    this[this.tableword_scores.furyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gladness {
                get {
                    return ((double)(this[this.tableword_scores.gladnessColumn]));
                }
                set {
                    this[this.tableword_scores.gladnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double thing {
                get {
                    return ((double)(this[this.tableword_scores.thingColumn]));
                }
                set {
                    this[this.tableword_scores.thingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double nausea {
                get {
                    return ((double)(this[this.tableword_scores.nauseaColumn]));
                }
                set {
                    this[this.tableword_scores.nauseaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double calmness {
                get {
                    return ((double)(this[this.tableword_scores.calmnessColumn]));
                }
                set {
                    this[this.tableword_scores.calmnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double fulfillment {
                get {
                    return ((double)(this[this.tableword_scores.fulfillmentColumn]));
                }
                set {
                    this[this.tableword_scores.fulfillmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ecstasy {
                get {
                    return ((double)(this[this.tableword_scores.ecstasyColumn]));
                }
                set {
                    this[this.tableword_scores.ecstasyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double elation {
                get {
                    return ((double)(this[this.tableword_scores.elationColumn]));
                }
                set {
                    this[this.tableword_scores.elationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double playfulness {
                get {
                    return ((double)(this[this.tableword_scores.playfulnessColumn]));
                }
                set {
                    this[this.tableword_scores.playfulnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double exhilaration {
                get {
                    return ((double)(this[this.tableword_scores.exhilarationColumn]));
                }
                set {
                    this[this.tableword_scores.exhilarationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double titillation {
                get {
                    return ((double)(this[this.tableword_scores.titillationColumn]));
                }
                set {
                    this[this.tableword_scores.titillationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double gratefulness {
                get {
                    return ((double)(this[this.tableword_scores.gratefulnessColumn]));
                }
                set {
                    this[this.tableword_scores.gratefulnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double diffidence {
                get {
                    return ((double)(this[this.tableword_scores.diffidenceColumn]));
                }
                set {
                    this[this.tableword_scores.diffidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double radiance {
                get {
                    return ((double)(this[this.tableword_scores.radianceColumn]));
                }
                set {
                    this[this.tableword_scores.radianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double sorrow {
                get {
                    return ((double)(this[this.tableword_scores.sorrowColumn]));
                }
                set {
                    this[this.tableword_scores.sorrowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double confidence {
                get {
                    return ((double)(this[this.tableword_scores.confidenceColumn]));
                }
                set {
                    this[this.tableword_scores.confidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double security {
                get {
                    return ((double)(this[this.tableword_scores.securityColumn]));
                }
                set {
                    this[this.tableword_scores.securityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ego {
                get {
                    return ((double)(this[this.tableword_scores.egoColumn]));
                }
                set {
                    this[this.tableword_scores.egoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double hostility {
                get {
                    return ((double)(this[this.tableword_scores.hostilityColumn]));
                }
                set {
                    this[this.tableword_scores.hostilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double frustration {
                get {
                    return ((double)(this[this.tableword_scores.frustrationColumn]));
                }
                set {
                    this[this.tableword_scores.frustrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double attrition {
                get {
                    return ((double)(this[this.tableword_scores.attritionColumn]));
                }
                set {
                    this[this.tableword_scores.attritionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double angst {
                get {
                    return ((double)(this[this.tableword_scores.angstColumn]));
                }
                set {
                    this[this.tableword_scores.angstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double shock {
                get {
                    return ((double)(this[this.tableword_scores.shockColumn]));
                }
                set {
                    this[this.tableword_scores.shockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double preference {
                get {
                    return ((double)(this[this.tableword_scores.preferenceColumn]));
                }
                set {
                    this[this.tableword_scores.preferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double enthusiasm {
                get {
                    return ((double)(this[this.tableword_scores.enthusiasmColumn]));
                }
                set {
                    this[this.tableword_scores.enthusiasmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double isolation {
                get {
                    return ((double)(this[this.tableword_scores.isolationColumn]));
                }
                set {
                    this[this.tableword_scores.isolationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double conscience {
                get {
                    return ((double)(this[this.tableword_scores.conscienceColumn]));
                }
                set {
                    this[this.tableword_scores.conscienceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double scruple {
                get {
                    return ((double)(this[this.tableword_scores.scrupleColumn]));
                }
                set {
                    this[this.tableword_scores.scrupleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double worry {
                get {
                    return ((double)(this[this.tableword_scores.worryColumn]));
                }
                set {
                    this[this.tableword_scores.worryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double earnestness {
                get {
                    return ((double)(this[this.tableword_scores.earnestnessColumn]));
                }
                set {
                    this[this.tableword_scores.earnestnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double malevolence {
                get {
                    return ((double)(this[this.tableword_scores.malevolenceColumn]));
                }
                set {
                    this[this.tableword_scores.malevolenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double awe {
                get {
                    return ((double)(this[this.tableword_scores.aweColumn]));
                }
                set {
                    this[this.tableword_scores.aweColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double guilt {
                get {
                    return ((double)(this[this.tableword_scores.guiltColumn]));
                }
                set {
                    this[this.tableword_scores.guiltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double identification {
                get {
                    return ((double)(this[this.tableword_scores.identificationColumn]));
                }
                set {
                    this[this.tableword_scores.identificationColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class emoji_scoresRowChangeEvent : global::System.EventArgs {
            
            private emoji_scoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresRowChangeEvent(emoji_scoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public emoji_scoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class word_scoresRowChangeEvent : global::System.EventArgs {
            
            private word_scoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresRowChangeEvent(word_scoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public word_scoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Twitter_Tweet_Tracker_Web.Models.Database._twitter_tweet_tracker_dbTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class emoji_scoresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public emoji_scoresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "emoji_scores";
            tableMapping.ColumnMappings.Add("unicode", "unicode");
            tableMapping.ColumnMappings.Add("emoji", "emoji");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("anger", "anger");
            tableMapping.ColumnMappings.Add("anticipation", "anticipation");
            tableMapping.ColumnMappings.Add("disgust", "disgust");
            tableMapping.ColumnMappings.Add("fear", "fear");
            tableMapping.ColumnMappings.Add("joy", "joy");
            tableMapping.ColumnMappings.Add("sadness", "sadness");
            tableMapping.ColumnMappings.Add("surprise", "surprise");
            tableMapping.ColumnMappings.Add("trust", "trust");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [emoji_scores] ([unicode], [emoji], [name], [anger], [anticipation], " +
                "[disgust], [fear], [joy], [sadness], [surprise], [trust]) VALUES (@unicode, @emo" +
                "ji, @name, @anger, @anticipation, @disgust, @fear, @joy, @sadness, @surprise, @t" +
                "rust)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unicode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unicode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@emoji", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "emoji", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anger", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anger", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anticipation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anticipation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@disgust", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "disgust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fear", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@joy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "joy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sadness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sadness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surprise", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surprise", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trust", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT *\r\nFROM     emoji_scores";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT * FROM emoji_scores WHERE EXISTS\r\n(SELECT value FROM STRING_SPLIT(@unicode" +
                "_searchCSV,\',\') where TRIM(value)<>\'\' AND unicode = value)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unicode_searchCSV", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _twitter_tweet_tracker_db.emoji_scoresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _twitter_tweet_tracker_db.emoji_scoresDataTable dataTable = new _twitter_tweet_tracker_db.emoji_scoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual _twitter_tweet_tracker_db.emoji_scoresDataTable GetDataFor(string unicode_searchCSV) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((unicode_searchCSV == null)) {
                throw new global::System.ArgumentNullException("unicode_searchCSV");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(unicode_searchCSV));
            }
            _twitter_tweet_tracker_db.emoji_scoresDataTable dataTable = new _twitter_tweet_tracker_db.emoji_scoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_twitter_tweet_tracker_db.emoji_scoresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_twitter_tweet_tracker_db dataSet) {
            return this.Adapter.Update(dataSet, "emoji_scores");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class word_scoresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public word_scoresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "word_scores";
            tableMapping.ColumnMappings.Add("word", "word");
            tableMapping.ColumnMappings.Add("joy", "joy");
            tableMapping.ColumnMappings.Add("surprise", "surprise");
            tableMapping.ColumnMappings.Add("trust", "trust");
            tableMapping.ColumnMappings.Add("anticipation", "anticipation");
            tableMapping.ColumnMappings.Add("fear", "fear");
            tableMapping.ColumnMappings.Add("anger", "anger");
            tableMapping.ColumnMappings.Add("sadness", "sadness");
            tableMapping.ColumnMappings.Add("disgust", "disgust");
            tableMapping.ColumnMappings.Add("happiness", "happiness");
            tableMapping.ColumnMappings.Add("levity", "levity");
            tableMapping.ColumnMappings.Add("hate", "hate");
            tableMapping.ColumnMappings.Add("loyalty", "loyalty");
            tableMapping.ColumnMappings.Add("melancholy", "melancholy");
            tableMapping.ColumnMappings.Add("anxiety", "anxiety");
            tableMapping.ColumnMappings.Add("embarrassment", "embarrassment");
            tableMapping.ColumnMappings.Add("regard", "regard");
            tableMapping.ColumnMappings.Add("stress", "stress");
            tableMapping.ColumnMappings.Add("gusto", "gusto");
            tableMapping.ColumnMappings.Add("compunction", "compunction");
            tableMapping.ColumnMappings.Add("cynicism", "cynicism");
            tableMapping.ColumnMappings.Add("situation", "situation");
            tableMapping.ColumnMappings.Add("umbrage", "umbrage");
            tableMapping.ColumnMappings.Add("favor", "favor");
            tableMapping.ColumnMappings.Add("meekness", "meekness");
            tableMapping.ColumnMappings.Add("compassion", "compassion");
            tableMapping.ColumnMappings.Add("withdrawal", "withdrawal");
            tableMapping.ColumnMappings.Add("scare", "scare");
            tableMapping.ColumnMappings.Add("unrest", "unrest");
            tableMapping.ColumnMappings.Add("calm", "calm");
            tableMapping.ColumnMappings.Add("courage", "courage");
            tableMapping.ColumnMappings.Add("despair", "despair");
            tableMapping.ColumnMappings.Add("fidget", "fidget");
            tableMapping.ColumnMappings.Add("shyness", "shyness");
            tableMapping.ColumnMappings.Add("apathy", "apathy");
            tableMapping.ColumnMappings.Add("hysteria", "hysteria");
            tableMapping.ColumnMappings.Add("shadow", "shadow");
            tableMapping.ColumnMappings.Add("resentment", "resentment");
            tableMapping.ColumnMappings.Add("optimism", "optimism");
            tableMapping.ColumnMappings.Add("heartstrings", "heartstrings");
            tableMapping.ColumnMappings.Add("bonheur", "bonheur");
            tableMapping.ColumnMappings.Add("dudgeon", "dudgeon");
            tableMapping.ColumnMappings.Add("merriment", "merriment");
            tableMapping.ColumnMappings.Add("hope", "hope");
            tableMapping.ColumnMappings.Add("foreboding", "foreboding");
            tableMapping.ColumnMappings.Add("envy", "envy");
            tableMapping.ColumnMappings.Add("interest", "interest");
            tableMapping.ColumnMappings.Add("relaxed", "relaxed");
            tableMapping.ColumnMappings.Add("cruelty", "cruelty");
            tableMapping.ColumnMappings.Add("helplessness", "helplessness");
            tableMapping.ColumnMappings.Add("solicitude", "solicitude");
            tableMapping.ColumnMappings.Add("satisfaction", "satisfaction");
            tableMapping.ColumnMappings.Add("suspense", "suspense");
            tableMapping.ColumnMappings.Add("fondness", "fondness");
            tableMapping.ColumnMappings.Add("dolor", "dolor");
            tableMapping.ColumnMappings.Add("weakness", "weakness");
            tableMapping.ColumnMappings.Add("electricity", "electricity");
            tableMapping.ColumnMappings.Add("esteem", "esteem");
            tableMapping.ColumnMappings.Add("woe", "woe");
            tableMapping.ColumnMappings.Add("relieved", "relieved");
            tableMapping.ColumnMappings.Add("wonder", "wonder");
            tableMapping.ColumnMappings.Add("attachment", "attachment");
            tableMapping.ColumnMappings.Add("pessimism", "pessimism");
            tableMapping.ColumnMappings.Add("malice", "malice");
            tableMapping.ColumnMappings.Add("love", "love");
            tableMapping.ColumnMappings.Add("compatibility", "compatibility");
            tableMapping.ColumnMappings.Add("timidity", "timidity");
            tableMapping.ColumnMappings.Add("blessedness", "blessedness");
            tableMapping.ColumnMappings.Add("exultation", "exultation");
            tableMapping.ColumnMappings.Add("tumult", "tumult");
            tableMapping.ColumnMappings.Add("alienation", "alienation");
            tableMapping.ColumnMappings.Add("humility", "humility");
            tableMapping.ColumnMappings.Add("powerlessness", "powerlessness");
            tableMapping.ColumnMappings.Add("complacency", "complacency");
            tableMapping.ColumnMappings.Add("gloom", "gloom");
            tableMapping.ColumnMappings.Add("aggression", "aggression");
            tableMapping.ColumnMappings.Add("sensation", "sensation");
            tableMapping.ColumnMappings.Add("antipathy", "antipathy");
            tableMapping.ColumnMappings.Add("gloat", "gloat");
            tableMapping.ColumnMappings.Add("doubt", "doubt");
            tableMapping.ColumnMappings.Add("empathy", "empathy");
            tableMapping.ColumnMappings.Add("consciousness", "consciousness");
            tableMapping.ColumnMappings.Add("ingratitude", "ingratitude");
            tableMapping.ColumnMappings.Add("hopelessness", "hopelessness");
            tableMapping.ColumnMappings.Add("signal", "signal");
            tableMapping.ColumnMappings.Add("alarm", "alarm");
            tableMapping.ColumnMappings.Add("dislike", "dislike");
            tableMapping.ColumnMappings.Add("stir", "stir");
            tableMapping.ColumnMappings.Add("distance", "distance");
            tableMapping.ColumnMappings.Add("smugness", "smugness");
            tableMapping.ColumnMappings.Add("repentance", "repentance");
            tableMapping.ColumnMappings.Add("easiness", "easiness");
            tableMapping.ColumnMappings.Add("friendliness", "friendliness");
            tableMapping.ColumnMappings.Add("gravity", "gravity");
            tableMapping.ColumnMappings.Add("displeasure", "displeasure");
            tableMapping.ColumnMappings.Add("discouragement", "discouragement");
            tableMapping.ColumnMappings.Add("pique", "pique");
            tableMapping.ColumnMappings.Add("benevolence", "benevolence");
            tableMapping.ColumnMappings.Add("chagrin", "chagrin");
            tableMapping.ColumnMappings.Add("tension", "tension");
            tableMapping.ColumnMappings.Add("togetherness", "togetherness");
            tableMapping.ColumnMappings.Add("panic", "panic");
            tableMapping.ColumnMappings.Add("eagerness", "eagerness");
            tableMapping.ColumnMappings.Add("pleasure", "pleasure");
            tableMapping.ColumnMappings.Add("excitement", "excitement");
            tableMapping.ColumnMappings.Add("mood", "mood");
            tableMapping.ColumnMappings.Add("animosity", "animosity");
            tableMapping.ColumnMappings.Add("defeatism", "defeatism");
            tableMapping.ColumnMappings.Add("worship", "worship");
            tableMapping.ColumnMappings.Add("repugnance", "repugnance");
            tableMapping.ColumnMappings.Add("grudge", "grudge");
            tableMapping.ColumnMappings.Add("euphoria", "euphoria");
            tableMapping.ColumnMappings.Add("antagonism", "antagonism");
            tableMapping.ColumnMappings.Add("trait", "trait");
            tableMapping.ColumnMappings.Add("brotherhood", "brotherhood");
            tableMapping.ColumnMappings.Add("stewing", "stewing");
            tableMapping.ColumnMappings.Add("pity", "pity");
            tableMapping.ColumnMappings.Add("daze", "daze");
            tableMapping.ColumnMappings.Add("sympathy", "sympathy");
            tableMapping.ColumnMappings.Add("annoyance", "annoyance");
            tableMapping.ColumnMappings.Add("encouragement", "encouragement");
            tableMapping.ColumnMappings.Add("buoyancy", "buoyancy");
            tableMapping.ColumnMappings.Add("devotion", "devotion");
            tableMapping.ColumnMappings.Add("triumph", "triumph");
            tableMapping.ColumnMappings.Add("contempt", "contempt");
            tableMapping.ColumnMappings.Add("belonging", "belonging");
            tableMapping.ColumnMappings.Add("sinking", "sinking");
            tableMapping.ColumnMappings.Add("unhappiness", "unhappiness");
            tableMapping.ColumnMappings.Add("trepidation", "trepidation");
            tableMapping.ColumnMappings.Add("admiration", "admiration");
            tableMapping.ColumnMappings.Add("disapproval", "disapproval");
            tableMapping.ColumnMappings.Add("indifference", "indifference");
            tableMapping.ColumnMappings.Add("affection", "affection");
            tableMapping.ColumnMappings.Add("astonishment", "astonishment");
            tableMapping.ColumnMappings.Add("oppression", "oppression");
            tableMapping.ColumnMappings.Add("languor", "languor");
            tableMapping.ColumnMappings.Add("coolness", "coolness");
            tableMapping.ColumnMappings.Add("liking", "liking");
            tableMapping.ColumnMappings.Add("behaviour", "behaviour");
            tableMapping.ColumnMappings.Add("peace", "peace");
            tableMapping.ColumnMappings.Add("misogyny", "misogyny");
            tableMapping.ColumnMappings.Add("bang", "bang");
            tableMapping.ColumnMappings.Add("cheerfulness", "cheerfulness");
            tableMapping.ColumnMappings.Add("creeps", "creeps");
            tableMapping.ColumnMappings.Add("agitation", "agitation");
            tableMapping.ColumnMappings.Add("boredom", "boredom");
            tableMapping.ColumnMappings.Add("gratification", "gratification");
            tableMapping.ColumnMappings.Add("hurt", "hurt");
            tableMapping.ColumnMappings.Add("agape", "agape");
            tableMapping.ColumnMappings.Add("concern", "concern");
            tableMapping.ColumnMappings.Add("ardor", "ardor");
            tableMapping.ColumnMappings.Add("mourning", "mourning");
            tableMapping.ColumnMappings.Add("harassment", "harassment");
            tableMapping.ColumnMappings.Add("contentment", "contentment");
            tableMapping.ColumnMappings.Add("closeness", "closeness");
            tableMapping.ColumnMappings.Add("surprised", "surprised");
            tableMapping.ColumnMappings.Add("confusion", "confusion");
            tableMapping.ColumnMappings.Add("presage", "presage");
            tableMapping.ColumnMappings.Add("approval", "approval");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("wrath", "wrath");
            tableMapping.ColumnMappings.Add("dander", "dander");
            tableMapping.ColumnMappings.Add("reverence", "reverence");
            tableMapping.ColumnMappings.Add("content", "content");
            tableMapping.ColumnMappings.Add("amusement", "amusement");
            tableMapping.ColumnMappings.Add("indignation", "indignation");
            tableMapping.ColumnMappings.Add("fearlessness", "fearlessness");
            tableMapping.ColumnMappings.Add("depreciation", "depreciation");
            tableMapping.ColumnMappings.Add("expectation", "expectation");
            tableMapping.ColumnMappings.Add("tenderness", "tenderness");
            tableMapping.ColumnMappings.Add("misery", "misery");
            tableMapping.ColumnMappings.Add("depression", "depression");
            tableMapping.ColumnMappings.Add("forgiveness", "forgiveness");
            tableMapping.ColumnMappings.Add("willies", "willies");
            tableMapping.ColumnMappings.Add("fit", "fit");
            tableMapping.ColumnMappings.Add("comfort", "comfort");
            tableMapping.ColumnMappings.Add("shame", "shame");
            tableMapping.ColumnMappings.Add("apprehension", "apprehension");
            tableMapping.ColumnMappings.Add("delight", "delight");
            tableMapping.ColumnMappings.Add("jealousy", "jealousy");
            tableMapping.ColumnMappings.Add("aggravation", "aggravation");
            tableMapping.ColumnMappings.Add("chill", "chill");
            tableMapping.ColumnMappings.Add("warpath", "warpath");
            tableMapping.ColumnMappings.Add("serene", "serene");
            tableMapping.ColumnMappings.Add("exuberance", "exuberance");
            tableMapping.ColumnMappings.Add("resignation", "resignation");
            tableMapping.ColumnMappings.Add("gratitude", "gratitude");
            tableMapping.ColumnMappings.Add("despondency", "despondency");
            tableMapping.ColumnMappings.Add("nirvana", "nirvana");
            tableMapping.ColumnMappings.Add("lividity", "lividity");
            tableMapping.ColumnMappings.Add("emotion", "emotion");
            tableMapping.ColumnMappings.Add("disappointment", "disappointment");
            tableMapping.ColumnMappings.Add("horror", "horror");
            tableMapping.ColumnMappings.Add("grief", "grief");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("distress", "distress");
            tableMapping.ColumnMappings.Add("intoxication", "intoxication");
            tableMapping.ColumnMappings.Add("irritation", "irritation");
            tableMapping.ColumnMappings.Add("insecurity", "insecurity");
            tableMapping.ColumnMappings.Add("pride", "pride");
            tableMapping.ColumnMappings.Add("fever", "fever");
            tableMapping.ColumnMappings.Add("rejoicing", "rejoicing");
            tableMapping.ColumnMappings.Add("impatience", "impatience");
            tableMapping.ColumnMappings.Add("politeness", "politeness");
            tableMapping.ColumnMappings.Add("tranquillity", "tranquillity");
            tableMapping.ColumnMappings.Add("hilarity", "hilarity");
            tableMapping.ColumnMappings.Add("fury", "fury");
            tableMapping.ColumnMappings.Add("gladness", "gladness");
            tableMapping.ColumnMappings.Add("thing", "thing");
            tableMapping.ColumnMappings.Add("nausea", "nausea");
            tableMapping.ColumnMappings.Add("calmness", "calmness");
            tableMapping.ColumnMappings.Add("fulfillment", "fulfillment");
            tableMapping.ColumnMappings.Add("ecstasy", "ecstasy");
            tableMapping.ColumnMappings.Add("elation", "elation");
            tableMapping.ColumnMappings.Add("playfulness", "playfulness");
            tableMapping.ColumnMappings.Add("exhilaration", "exhilaration");
            tableMapping.ColumnMappings.Add("titillation", "titillation");
            tableMapping.ColumnMappings.Add("gratefulness", "gratefulness");
            tableMapping.ColumnMappings.Add("diffidence", "diffidence");
            tableMapping.ColumnMappings.Add("radiance", "radiance");
            tableMapping.ColumnMappings.Add("sorrow", "sorrow");
            tableMapping.ColumnMappings.Add("confidence", "confidence");
            tableMapping.ColumnMappings.Add("security", "security");
            tableMapping.ColumnMappings.Add("ego", "ego");
            tableMapping.ColumnMappings.Add("hostility", "hostility");
            tableMapping.ColumnMappings.Add("frustration", "frustration");
            tableMapping.ColumnMappings.Add("attrition", "attrition");
            tableMapping.ColumnMappings.Add("angst", "angst");
            tableMapping.ColumnMappings.Add("shock", "shock");
            tableMapping.ColumnMappings.Add("preference", "preference");
            tableMapping.ColumnMappings.Add("enthusiasm", "enthusiasm");
            tableMapping.ColumnMappings.Add("isolation", "isolation");
            tableMapping.ColumnMappings.Add("conscience", "conscience");
            tableMapping.ColumnMappings.Add("scruple", "scruple");
            tableMapping.ColumnMappings.Add("worry", "worry");
            tableMapping.ColumnMappings.Add("earnestness", "earnestness");
            tableMapping.ColumnMappings.Add("malevolence", "malevolence");
            tableMapping.ColumnMappings.Add("awe", "awe");
            tableMapping.ColumnMappings.Add("guilt", "guilt");
            tableMapping.ColumnMappings.Add("identification", "identification");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [word_scores] ([word], [joy], [surprise], [trust], [anticipation], [f" +
                "ear], [anger], [sadness], [disgust], [happiness], [levity], [hate], [loyalty], [" +
                "melancholy], [anxiety], [embarrassment], [regard], [stress], [gusto], [compuncti" +
                "on], [cynicism], [situation], [umbrage], [favor], [meekness], [compassion], [wit" +
                "hdrawal], [scare], [unrest], [calm], [courage], [despair], [fidget], [shyness], " +
                "[apathy], [hysteria], [shadow], [resentment], [optimism], [heartstrings], [bonhe" +
                "ur], [dudgeon], [merriment], [hope], [foreboding], [envy], [interest], [relaxed]" +
                ", [cruelty], [helplessness], [solicitude], [satisfaction], [suspense], [fondness" +
                "], [dolor], [weakness], [electricity], [esteem], [woe], [relieved], [wonder], [a" +
                "ttachment], [pessimism], [malice], [love], [compatibility], [timidity], [blessed" +
                "ness], [exultation], [tumult], [alienation], [humility], [powerlessness], [compl" +
                "acency], [gloom], [aggression], [sensation], [antipathy], [gloat], [doubt], [emp" +
                "athy], [consciousness], [ingratitude], [hopelessness], [signal], [alarm], [disli" +
                "ke], [stir], [distance], [smugness], [repentance], [easiness], [friendliness], [" +
                "gravity], [displeasure], [discouragement], [pique], [benevolence], [chagrin], [t" +
                "ension], [togetherness], [panic], [eagerness], [pleasure], [excitement], [mood]," +
                " [animosity], [defeatism], [worship], [repugnance], [grudge], [euphoria], [antag" +
                "onism], [trait], [brotherhood], [stewing], [pity], [daze], [sympathy], [annoyanc" +
                "e], [encouragement], [buoyancy], [devotion], [triumph], [contempt], [belonging]," +
                " [sinking], [unhappiness], [trepidation], [admiration], [disapproval], [indiffer" +
                "ence], [affection], [astonishment], [oppression], [languor], [coolness], [liking" +
                "], [behaviour], [peace], [misogyny], [bang], [cheerfulness], [creeps], [agitatio" +
                "n], [boredom], [gratification], [hurt], [agape], [concern], [ardor], [mourning]," +
                " [harassment], [contentment], [closeness], [surprised], [confusion], [presage], " +
                "[approval], [state], [wrath], [dander], [reverence], [content], [amusement], [in" +
                "dignation], [fearlessness], [depreciation], [expectation], [tenderness], [misery" +
                "], [depression], [forgiveness], [willies], [fit], [comfort], [shame], [apprehens" +
                "ion], [delight], [jealousy], [aggravation], [chill], [warpath], [serene], [exube" +
                "rance], [resignation], [gratitude], [despondency], [nirvana], [lividity], [emoti" +
                "on], [disappointment], [horror], [grief], [weight], [distress], [intoxication], " +
                "[irritation], [insecurity], [pride], [fever], [rejoicing], [impatience], [polite" +
                "ness], [tranquillity], [hilarity], [fury], [gladness], [thing], [nausea], [calmn" +
                "ess], [fulfillment], [ecstasy], [elation], [playfulness], [exhilaration], [titil" +
                "lation], [gratefulness], [diffidence], [radiance], [sorrow], [confidence], [secu" +
                "rity], [ego], [hostility], [frustration], [attrition], [angst], [shock], [prefer" +
                "ence], [enthusiasm], [isolation], [conscience], [scruple], [worry], [earnestness" +
                "], [malevolence], [awe], [guilt], [identification]) VALUES (@word, @joy, @surpri" +
                "se, @trust, @anticipation, @fear, @anger, @sadness, @disgust, @happiness, @levit" +
                "y, @hate, @loyalty, @melancholy, @anxiety, @embarrassment, @regard, @stress, @gu" +
                "sto, @compunction, @cynicism, @situation, @umbrage, @favor, @meekness, @compassi" +
                "on, @withdrawal, @scare, @unrest, @calm, @courage, @despair, @fidget, @shyness, " +
                "@apathy, @hysteria, @shadow, @resentment, @optimism, @heartstrings, @bonheur, @d" +
                "udgeon, @merriment, @hope, @foreboding, @envy, @interest, @relaxed, @cruelty, @h" +
                "elplessness, @solicitude, @satisfaction, @suspense, @fondness, @dolor, @weakness" +
                ", @electricity, @esteem, @woe, @relieved, @wonder, @attachment, @pessimism, @mal" +
                "ice, @love, @compatibility, @timidity, @blessedness, @exultation, @tumult, @alie" +
                "nation, @humility, @powerlessness, @complacency, @gloom, @aggression, @sensation" +
                ", @antipathy, @gloat, @doubt, @empathy, @consciousness, @ingratitude, @hopelessn" +
                "ess, @signal, @alarm, @dislike, @stir, @distance, @smugness, @repentance, @easin" +
                "ess, @friendliness, @gravity, @displeasure, @discouragement, @pique, @benevolenc" +
                "e, @chagrin, @tension, @togetherness, @panic, @eagerness, @pleasure, @excitement" +
                ", @mood, @animosity, @defeatism, @worship, @repugnance, @grudge, @euphoria, @ant" +
                "agonism, @trait, @brotherhood, @stewing, @pity, @daze, @sympathy, @annoyance, @e" +
                "ncouragement, @buoyancy, @devotion, @triumph, @contempt, @belonging, @sinking, @" +
                "unhappiness, @trepidation, @admiration, @disapproval, @indifference, @affection," +
                " @astonishment, @oppression, @languor, @coolness, @liking, @behaviour, @peace, @" +
                "misogyny, @bang, @cheerfulness, @creeps, @agitation, @boredom, @gratification, @" +
                "hurt, @agape, @concern, @ardor, @mourning, @harassment, @contentment, @closeness" +
                ", @surprised, @confusion, @presage, @approval, @state, @wrath, @dander, @reveren" +
                "ce, @content, @amusement, @indignation, @fearlessness, @depreciation, @expectati" +
                "on, @tenderness, @misery, @depression, @forgiveness, @willies, @fit, @comfort, @" +
                "shame, @apprehension, @delight, @jealousy, @aggravation, @chill, @warpath, @sere" +
                "ne, @exuberance, @resignation, @gratitude, @despondency, @nirvana, @lividity, @e" +
                "motion, @disappointment, @horror, @grief, @weight, @distress, @intoxication, @ir" +
                "ritation, @insecurity, @pride, @fever, @rejoicing, @impatience, @politeness, @tr" +
                "anquillity, @hilarity, @fury, @gladness, @thing, @nausea, @calmness, @fulfillmen" +
                "t, @ecstasy, @elation, @playfulness, @exhilaration, @titillation, @gratefulness," +
                " @diffidence, @radiance, @sorrow, @confidence, @security, @ego, @hostility, @fru" +
                "stration, @attrition, @angst, @shock, @preference, @enthusiasm, @isolation, @con" +
                "science, @scruple, @worry, @earnestness, @malevolence, @awe, @guilt, @identifica" +
                "tion)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@word", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "word", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@joy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "joy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surprise", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surprise", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trust", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anticipation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anticipation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fear", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anger", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anger", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sadness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sadness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@disgust", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "disgust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@happiness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "happiness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@levity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "levity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loyalty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loyalty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@melancholy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "melancholy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anxiety", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anxiety", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@embarrassment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "embarrassment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regard", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "regard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gusto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gusto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@compunction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compunction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cynicism", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cynicism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@situation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "situation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@umbrage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "umbrage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@favor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "favor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@meekness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "meekness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@compassion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compassion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@withdrawal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "withdrawal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scare", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "scare", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unrest", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unrest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calm", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@courage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "courage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@despair", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "despair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fidget", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fidget", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shyness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shyness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@apathy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apathy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hysteria", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hysteria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shadow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shadow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@resentment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "resentment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optimism", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "optimism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@heartstrings", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "heartstrings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bonheur", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bonheur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dudgeon", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dudgeon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@merriment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "merriment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hope", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hope", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@foreboding", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "foreboding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@envy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "envy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@interest", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "interest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@relaxed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relaxed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cruelty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cruelty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@helplessness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "helplessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@solicitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "solicitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@satisfaction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "satisfaction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@suspense", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "suspense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fondness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fondness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dolor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dolor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@weakness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weakness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@electricity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "electricity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@esteem", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "esteem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@woe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "woe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@relieved", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "relieved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wonder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wonder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attachment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pessimism", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pessimism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@malice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "malice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@love", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "love", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@compatibility", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "compatibility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@timidity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "timidity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@blessedness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "blessedness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exultation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exultation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tumult", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tumult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alienation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alienation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@humility", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "humility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@powerlessness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "powerlessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@complacency", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complacency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gloom", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gloom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aggression", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aggression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sensation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sensation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@antipathy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "antipathy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gloat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gloat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@doubt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "doubt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@empathy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "empathy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@consciousness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "consciousness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ingratitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ingratitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hopelessness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hopelessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@signal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "signal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alarm", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dislike", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dislike", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stir", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stir", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@smugness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "smugness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@repentance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repentance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@easiness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "easiness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@friendliness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "friendliness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@displeasure", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displeasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@discouragement", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "discouragement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pique", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pique", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@benevolence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "benevolence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chagrin", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chagrin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tension", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@togetherness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "togetherness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@panic", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "panic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eagerness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eagerness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pleasure", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pleasure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@excitement", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "excitement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mood", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@animosity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "animosity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@defeatism", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "defeatism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@worship", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "worship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@repugnance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repugnance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grudge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grudge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@euphoria", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "euphoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@antagonism", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "antagonism", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trait", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trait", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@brotherhood", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brotherhood", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stewing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "stewing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@daze", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "daze", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sympathy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sympathy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@annoyance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "annoyance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@encouragement", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "encouragement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@buoyancy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "buoyancy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@devotion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "devotion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@triumph", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "triumph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contempt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@belonging", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "belonging", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sinking", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sinking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unhappiness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unhappiness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trepidation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trepidation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@admiration", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "admiration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@disapproval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "disapproval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indifference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indifference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@affection", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "affection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@astonishment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "astonishment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oppression", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oppression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@languor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "languor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coolness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coolness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@liking", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "liking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@behaviour", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "behaviour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@peace", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "peace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@misogyny", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misogyny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bang", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bang", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cheerfulness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cheerfulness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@creeps", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "creeps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agitation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agitation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@boredom", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "boredom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gratification", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hurt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hurt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agape", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@concern", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concern", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ardor", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ardor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mourning", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mourning", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@harassment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "harassment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contentment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contentment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@closeness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "closeness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surprised", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surprised", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@confusion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@presage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "presage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "approval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wrath", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wrath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dander", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dander", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reverence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reverence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@content", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "content", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amusement", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "amusement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indignation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fearlessness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fearlessness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depreciation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depreciation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expectation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expectation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tenderness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tenderness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@misery", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@depression", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "depression", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@forgiveness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "forgiveness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@willies", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "willies", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comfort", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comfort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shame", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shame", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@apprehension", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apprehension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jealousy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jealousy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aggravation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aggravation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chill", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "chill", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@warpath", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "warpath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serene", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serene", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exuberance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exuberance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@resignation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "resignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gratitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@despondency", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "despondency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nirvana", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nirvana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lividity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lividity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@emotion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "emotion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@disappointment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "disappointment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@horror", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "horror", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grief", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grief", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "distress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intoxication", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intoxication", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@irritation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "irritation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insecurity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insecurity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pride", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fever", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fever", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rejoicing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rejoicing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@impatience", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "impatience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@politeness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "politeness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tranquillity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tranquillity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hilarity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hilarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fury", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fury", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gladness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gladness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@thing", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "thing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nausea", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nausea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calmness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "calmness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fulfillment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fulfillment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ecstasy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ecstasy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@elation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "elation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@playfulness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "playfulness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exhilaration", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exhilaration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@titillation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "titillation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gratefulness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratefulness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@diffidence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "diffidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@radiance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "radiance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sorrow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sorrow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@confidence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "confidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@security", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "security", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ego", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ego", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostility", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frustration", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frustration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attrition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attrition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@angst", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "angst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@preference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "preference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enthusiasm", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "enthusiasm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isolation", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isolation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conscience", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conscience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scruple", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "scruple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@worry", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "worry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@earnestness", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "earnestness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@malevolence", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "malevolence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@awe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "awe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@guilt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guilt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@identification", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "identification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT word_scores.*\r\nFROM     word_scores";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT * FROM word_scores WHERE EXISTS\r\n(SELECT value FROM STRING_SPLIT(@searchCS" +
                "V,\',\') where TRIM(value)<>\'\' AND word = value)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@searchCSV", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _twitter_tweet_tracker_db.word_scoresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _twitter_tweet_tracker_db.word_scoresDataTable dataTable = new _twitter_tweet_tracker_db.word_scoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual _twitter_tweet_tracker_db.word_scoresDataTable GetDataFor(string searchCSV) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((searchCSV == null)) {
                throw new global::System.ArgumentNullException("searchCSV");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(searchCSV));
            }
            _twitter_tweet_tracker_db.word_scoresDataTable dataTable = new _twitter_tweet_tracker_db.word_scoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_twitter_tweet_tracker_db.word_scoresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_twitter_tweet_tracker_db dataSet) {
            return this.Adapter.Update(dataSet, "word_scores");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private emoji_scoresTableAdapter _emoji_scoresTableAdapter;
        
        private word_scoresTableAdapter _word_scoresTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public emoji_scoresTableAdapter emoji_scoresTableAdapter {
            get {
                return this._emoji_scoresTableAdapter;
            }
            set {
                this._emoji_scoresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public word_scoresTableAdapter word_scoresTableAdapter {
            get {
                return this._word_scoresTableAdapter;
            }
            set {
                this._word_scoresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._emoji_scoresTableAdapter != null) 
                            && (this._emoji_scoresTableAdapter.Connection != null))) {
                    return this._emoji_scoresTableAdapter.Connection;
                }
                if (((this._word_scoresTableAdapter != null) 
                            && (this._word_scoresTableAdapter.Connection != null))) {
                    return this._word_scoresTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._emoji_scoresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._word_scoresTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(_twitter_tweet_tracker_db dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._emoji_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.emoji_scores.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._emoji_scoresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._word_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.word_scores.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._word_scoresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(_twitter_tweet_tracker_db dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._emoji_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.emoji_scores.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._emoji_scoresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._word_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.word_scores.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._word_scoresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(_twitter_tweet_tracker_db dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._word_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.word_scores.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._word_scoresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._emoji_scoresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.emoji_scores.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._emoji_scoresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(_twitter_tweet_tracker_db dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._emoji_scoresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._emoji_scoresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._word_scoresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._word_scoresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._emoji_scoresTableAdapter != null)) {
                    revertConnections.Add(this._emoji_scoresTableAdapter, this._emoji_scoresTableAdapter.Connection);
                    this._emoji_scoresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._emoji_scoresTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._emoji_scoresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._emoji_scoresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._emoji_scoresTableAdapter.Adapter);
                    }
                }
                if ((this._word_scoresTableAdapter != null)) {
                    revertConnections.Add(this._word_scoresTableAdapter, this._word_scoresTableAdapter.Connection);
                    this._word_scoresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._word_scoresTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._word_scoresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._word_scoresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._word_scoresTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._emoji_scoresTableAdapter != null)) {
                    this._emoji_scoresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._emoji_scoresTableAdapter]));
                    this._emoji_scoresTableAdapter.Transaction = null;
                }
                if ((this._word_scoresTableAdapter != null)) {
                    this._word_scoresTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._word_scoresTableAdapter]));
                    this._word_scoresTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591